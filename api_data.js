define({ "api": [  {    "description": "<p>Login with facebook. Creates a new user if it does not exist</p>",    "version": "1.0.0",    "name": "FacebookLogin",    "group": "Auth",    "permission": [      {        "name": "public"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "access_token",            "description": "<p>Facebook's access_token</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "tokenType",            "description": "<p>Access Token's type</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "accessToken",            "description": "<p>Authorization Token</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "refreshToken",            "description": "<p>Token to get a new accessToken after expiration time</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "expiresIn",            "description": "<p>Access Token's expiration time in miliseconds</p>"          }        ]      }    },    "error": {      "fields": {        "Bad Request 400": [          {            "group": "Bad Request 400",            "optional": false,            "field": "ValidationError",            "description": "<p>Some parameters may contain invalid values</p>"          }        ],        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Incorrect access_token</p>"          }        ]      }    },    "type": "",    "url": "",    "filename": "src/api/routes/v1/auth.route.js",    "groupTitle": "Auth"  },  {    "description": "<p>Login with google. Creates a new user if it does not exist</p>",    "version": "1.0.0",    "name": "GoogleLogin",    "group": "Auth",    "permission": [      {        "name": "public"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "access_token",            "description": "<p>Google's access_token</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "tokenType",            "description": "<p>Access Token's type</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "accessToken",            "description": "<p>Authorization Token</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "refreshToken",            "description": "<p>Token to get a new accpessToken after expiration time</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "expiresIn",            "description": "<p>Access Token's expiration time in miliseconds</p>"          }        ]      }    },    "error": {      "fields": {        "Bad Request 400": [          {            "group": "Bad Request 400",            "optional": false,            "field": "ValidationError",            "description": "<p>Some parameters may contain invalid values</p>"          }        ],        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Incorrect access_token</p>"          }        ]      }    },    "type": "",    "url": "",    "filename": "src/api/routes/v1/auth.route.js",    "groupTitle": "Auth"  },  {    "type": "post",    "url": "v1/auth/login",    "title": "Login",    "description": "<p>Get an accessToken</p>",    "version": "1.0.0",    "name": "Login",    "group": "Auth",    "permission": [      {        "name": "public"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "size": "6..12",            "optional": false,            "field": "login",            "description": "<p>User's login</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>User's email</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "6..128",            "optional": false,            "field": "password",            "description": "<p>User's password</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "token.tokenType",            "description": "<p>Access Token's type</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "token.accessToken",            "description": "<p>Authorization Token</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "token.refreshToken",            "description": "<p>Token to get a new accessToken after expiration time</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "token.expiresIn",            "description": "<p>Access Token's expiration time in miliseconds</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "user.id",            "description": "<p>User's id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "user.name",            "description": "<p>User's name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "user.login",            "description": "<p>User's login</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "user.email",            "description": "<p>User's email</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "user.role",            "description": "<p>User's role</p>"          },          {            "group": "Success 200",            "type": "Date",            "optional": false,            "field": "user.createdAt",            "description": "<p>Timestamp</p>"          }        ]      }    },    "error": {      "fields": {        "Bad Request 400": [          {            "group": "Bad Request 400",            "optional": false,            "field": "ValidationError",            "description": "<p>Some parameters may contain invalid values</p>"          }        ],        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Incorrect email or password</p>"          }        ]      }    },    "filename": "src/api/routes/v1/auth.route.js",    "groupTitle": "Auth"  },  {    "type": "post",    "url": "v1/auth/refresh-token",    "title": "Refresh Token",    "description": "<p>Refresh expired accessToken</p>",    "version": "1.0.0",    "name": "RefreshToken",    "group": "Auth",    "permission": [      {        "name": "public"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>User's email</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "refreshToken",            "description": "<p>Refresh token aquired when user logged in</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "tokenType",            "description": "<p>Access Token's type</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "accessToken",            "description": "<p>Authorization Token</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "refreshToken",            "description": "<p>Token to get a new accessToken after expiration time</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "expiresIn",            "description": "<p>Access Token's expiration time in miliseconds</p>"          }        ]      }    },    "error": {      "fields": {        "Bad Request 400": [          {            "group": "Bad Request 400",            "optional": false,            "field": "ValidationError",            "description": "<p>Some parameters may contain invalid values</p>"          }        ],        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Incorrect email or refreshToken</p>"          }        ]      }    },    "filename": "src/api/routes/v1/auth.route.js",    "groupTitle": "Auth"  },  {    "type": "post",    "url": "v1/auth/register",    "title": "Register",    "description": "<p>Register a new user</p>",    "version": "1.0.0",    "name": "Register",    "group": "Auth",    "permission": [      {        "name": "public"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "size": "6..12",            "optional": false,            "field": "login",            "description": "<p>User's login</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>User's email</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "6..12",            "optional": false,            "field": "password",            "description": "<p>User's password</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "4..12",            "optional": false,            "field": "pin",            "description": "<p>User's pin</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "..128",            "optional": false,            "field": "name",            "description": "<p>User's name</p>"          },          {            "group": "Parameter",            "type": "String",            "allowedValues": [              "\"fisica\"",              "\"juridica\""            ],            "optional": false,            "field": "personType",            "description": "<p>User's person type</p>"          },          {            "group": "Parameter",            "type": "Date",            "optional": false,            "field": "birthdate",            "description": "<p>User's birthdate</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "11..14",            "optional": false,            "field": "cpfCnpj",            "description": "<p>User's cpfCnpj</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "..30",            "optional": false,            "field": "docId",            "description": "<p>User's docId</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "..11",            "optional": false,            "field": "phone",            "description": "<p>User's phone</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "..11",            "optional": false,            "field": "cellphone",            "description": "<p>User's cellphone</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "..100",            "optional": false,            "field": "motherName",            "description": "<p>User's mother name</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "..100",            "optional": false,            "field": "fatherName",            "description": "<p>User's father name</p>"          },          {            "group": "Parameter",            "type": "String",            "allowedValues": [              "\"casado\"",              "\"solteiro\"",              "\"outros\""            ],            "optional": false,            "field": "maritalStatus",            "description": "<p>User's marital status</p>"          },          {            "group": "Parameter",            "type": "String",            "allowedValues": [              "\"m\"",              "\"f\""            ],            "optional": false,            "field": "gender",            "description": "<p>User's gender</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "..300",            "optional": false,            "field": "address",            "description": "<p>User's address</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "addressNumber",            "description": "<p>User's address number</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "..100",            "optional": false,            "field": "address1",            "description": "<p>User's address1</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "..50",            "optional": false,            "field": "district",            "description": "<p>User's district</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "..50",            "optional": false,            "field": "city",            "description": "<p>User's city</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "2..2",            "optional": false,            "field": "state",            "description": "<p>User's state</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "8..8",            "optional": false,            "field": "zipCode",            "description": "<p>User's zipcode</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "..50",            "optional": false,            "field": "bank",            "description": "<p>User's bank</p>"          },          {            "group": "Parameter",            "type": "String",            "allowedValues": [              "\"cc\"",              "\"cp\""            ],            "optional": false,            "field": "accountType",            "description": "<p>User's account type</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "agencyNumber",            "description": "<p>User's agency number</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "accountDigit",            "description": "<p>User's account digit</p>"          },          {            "group": "Parameter",            "type": "role",            "allowedValues": [              "\"marketing\"",              "\"operacional\""            ],            "optional": false,            "field": "role",            "description": "<p>User's role</p>"          }        ]      }    },    "success": {      "fields": {        "Created 201": [          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "token.tokenType",            "description": "<p>Access Token's type</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "token.accessToken",            "description": "<p>Authorization Token</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "token.refreshToken",            "description": "<p>Token to get a new accessToken after expiration time</p>"          },          {            "group": "Created 201",            "type": "Number",            "optional": false,            "field": "token.expiresIn",            "description": "<p>Access Token's expiration time in miliseconds</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "token.timezone",            "description": "<p>The server's Timezone</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "user.id",            "description": "<p>User's id</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "user.name",            "description": "<p>User's name</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "user.login",            "description": "<p>User's login</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "user.email",            "description": "<p>User's email</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "user.role",            "description": "<p>User's role</p>"          },          {            "group": "Created 201",            "type": "Date",            "optional": false,            "field": "user.createdAt",            "description": "<p>Timestamp</p>"          }        ]      }    },    "error": {      "fields": {        "Bad Request 400": [          {            "group": "Bad Request 400",            "optional": false,            "field": "ValidationError",            "description": "<p>Some parameters may contain invalid values</p>"          }        ]      }    },    "filename": "src/api/routes/v1/auth.route.js",    "groupTitle": "Auth"  },  {    "type": "post",    "url": "v1/auto-responder",    "title": "Create AutoResponder",    "description": "<p>Create a new AutoResponder</p>",    "version": "1.0.0",    "name": "CreateAutoResponder",    "group": "AutoResponder",    "permission": [      {        "name": "admin, marketing"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "size": "...50",            "optional": false,            "field": "name",            "description": "<p>AutoResponder name</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "...200",            "optional": false,            "field": "description",            "description": "<p>AutoResponder description</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "...200",            "optional": false,            "field": "subject",            "description": "<p>AutoResponder subject</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "...50",            "optional": false,            "field": "senderName",            "description": "<p>AutoResponder senderName</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "content",            "description": "<p>AutoResponder content</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "timer",            "description": "<p>AutoResponder timer</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": false,            "field": "active",            "description": "<p>AutoResponder active</p>"          }        ]      }    },    "success": {      "fields": {        "Created 201": [          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p>AutoResponder id</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>AutoResponder name</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "description",            "description": "<p>AutoResponder description</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "subject",            "description": "<p>AutoResponder subject</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "senderName",            "description": "<p>AutoResponder senderName</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "content",            "description": "<p>AutoResponder content</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "headerImageURL",            "description": "<p>AutoResponder headerImageURL</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "footerImageURL",            "description": "<p>AutoResponder footerImageURL</p>"          },          {            "group": "Created 201",            "type": "Number",            "optional": false,            "field": "timer",            "description": "<p>AutoResponder timer</p>"          },          {            "group": "Created 201",            "type": "Boolean",            "optional": false,            "field": "active",            "description": "<p>AutoResponder active</p>"          },          {            "group": "Created 201",            "type": "Date",            "optional": false,            "field": "createdAt",            "description": "<p>Timestamp</p>"          }        ],        "Success 200": [          {            "group": "Success 200",            "type": "Date",            "optional": false,            "field": "updatedAt",            "description": "<p>Timestamp</p>"          }        ]      }    },    "error": {      "fields": {        "Bad Request 400": [          {            "group": "Bad Request 400",            "optional": false,            "field": "ValidationError",            "description": "<p>Some parameters may contain invalid values</p>"          }        ],        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users (with permissions) can access the data</p>"          }        ],        "Forbidden 403": [          {            "group": "Forbidden 403",            "optional": false,            "field": "Forbidden",            "description": "<p>Only user with same id can access the data</p>"          }        ]      }    },    "filename": "src/api/routes/v1/auto-responder.route.js",    "groupTitle": "AutoResponder"  },  {    "type": "get",    "url": "v1/auto-responder/:id",    "title": "Delete AutoResponder",    "description": "<p>Delete AutoResponder information</p>",    "version": "1.0.0",    "name": "DeleteAutoResponder",    "group": "AutoResponder",    "permission": [      {        "name": "user"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "success": {      "fields": {        "No Content 204": [          {            "group": "No Content 204",            "optional": false,            "field": "Successfully",            "description": "<p>deleted</p>"          }        ]      }    },    "error": {      "fields": {        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users (with permissions) can access the data</p>"          }        ],        "Forbidden 403": [          {            "group": "Forbidden 403",            "optional": false,            "field": "Forbidden",            "description": "<p>Only user with same id can access the data</p>"          }        ],        "Not Found 404": [          {            "group": "Not Found 404",            "optional": false,            "field": "NotFound",            "description": "<p>AutoResponder does not exist</p>"          }        ]      }    },    "filename": "src/api/routes/v1/auto-responder.route.js",    "groupTitle": "AutoResponder"  },  {    "type": "get",    "url": "v1/auto-responder/:id",    "title": "Get AutoResponder",    "description": "<p>Get AutoResponder information</p>",    "version": "1.0.0",    "name": "GetAutoResponder",    "group": "AutoResponder",    "permission": [      {        "name": "user"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p>AutoResponder id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>AutoResponder name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "description",            "description": "<p>AutoResponder description</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "subject",            "description": "<p>AutoResponder subject</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "senderName",            "description": "<p>AutoResponder senderName</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "content",            "description": "<p>AutoResponder content</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "headerImageURL",            "description": "<p>AutoResponder headerImageURL</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "footerImageURL",            "description": "<p>AutoResponder footerImageURL</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "timer",            "description": "<p>AutoResponder timer</p>"          },          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "active",            "description": "<p>AutoResponder active</p>"          },          {            "group": "Success 200",            "type": "Date",            "optional": false,            "field": "createdAt",            "description": "<p>Timestamp</p>"          },          {            "group": "Success 200",            "type": "Date",            "optional": false,            "field": "updatedAt",            "description": "<p>Timestamp</p>"          }        ]      }    },    "error": {      "fields": {        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users (with permissions) can access the data</p>"          }        ],        "Forbidden 403": [          {            "group": "Forbidden 403",            "optional": false,            "field": "Forbidden",            "description": "<p>Only user with same id can access the data</p>"          }        ],        "Not Found 404": [          {            "group": "Not Found 404",            "optional": false,            "field": "NotFound",            "description": "<p>AutoResponder does not exist</p>"          }        ]      }    },    "filename": "src/api/routes/v1/auto-responder.route.js",    "groupTitle": "AutoResponder"  },  {    "type": "get",    "url": "v1/auto-responder",    "title": "List AutoResponders",    "description": "<p>List all AutoResponders information</p>",    "version": "1.0.0",    "name": "ListAutoResponder",    "group": "AutoResponder",    "permission": [      {        "name": "admin, marketing"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "size": "1-",            "optional": true,            "field": "page",            "defaultValue": "1",            "description": "<p>List page</p>"          },          {            "group": "Parameter",            "type": "Number",            "size": "1-100",            "optional": true,            "field": "limit",            "defaultValue": "10",            "description": "<p>Results per page</p>"          }        ]      }    },    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "autoResponders",            "description": "<p>List of AutoResponders.</p>"          }        ]      }    },    "error": {      "fields": {        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users (with permissions) can access the data</p>"          }        ]      }    },    "filename": "src/api/routes/v1/auto-responder.route.js",    "groupTitle": "AutoResponder"  },  {    "type": "put",    "url": "v1/auto-responder",    "title": "Update AutoResponder",    "description": "<p>Update a AutoResponder</p>",    "version": "1.0.0",    "name": "UpdateAutoResponder",    "group": "AutoResponder",    "permission": [      {        "name": "admin, marketing"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p>AutoResponder id</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "...50",            "optional": false,            "field": "name",            "description": "<p>AutoResponder name</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "...200",            "optional": false,            "field": "description",            "description": "<p>AutoResponder description</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "...200",            "optional": false,            "field": "subject",            "description": "<p>AutoResponder subject</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "...50",            "optional": false,            "field": "senderName",            "description": "<p>AutoResponder senderName</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "content",            "description": "<p>AutoResponder content</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "timer",            "description": "<p>AutoResponder timer</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": false,            "field": "active",            "description": "<p>AutoResponder active</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p>AutoResponder id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>AutoResponder name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "description",            "description": "<p>AutoResponder description</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "subject",            "description": "<p>AutoResponder subject</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "senderName",            "description": "<p>AutoResponder senderName</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "content",            "description": "<p>AutoResponder content</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "headerImageURL",            "description": "<p>AutoResponder headerImageURL</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "footerImageURL",            "description": "<p>AutoResponder footerImageURL</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "timer",            "description": "<p>AutoResponder timer</p>"          },          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "active",            "description": "<p>AutoResponder active</p>"          },          {            "group": "Success 200",            "type": "Date",            "optional": false,            "field": "createdAt",            "description": "<p>Timestamp</p>"          },          {            "group": "Success 200",            "type": "Date",            "optional": false,            "field": "updatedAt",            "description": "<p>Timestamp</p>"          }        ]      }    },    "error": {      "fields": {        "Bad Request 400": [          {            "group": "Bad Request 400",            "optional": false,            "field": "ValidationError",            "description": "<p>Some parameters may contain invalid values</p>"          }        ],        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users (with permissions) can access the data</p>"          }        ],        "Forbidden 403": [          {            "group": "Forbidden 403",            "optional": false,            "field": "Forbidden",            "description": "<p>Only user with same id can access the data</p>"          }        ],        "Not Found 404": [          {            "group": "Not Found 404",            "optional": false,            "field": "NotFound",            "description": "<p>AutoResponder does not exist</p>"          }        ]      }    },    "filename": "src/api/routes/v1/auto-responder.route.js",    "groupTitle": "AutoResponder"  },  {    "type": "get",    "url": "v1/campaign/count-active",    "title": "Count Active Campaigns",    "description": "<p>Return number of active Campaigns</p>",    "version": "1.0.0",    "name": "Campaign",    "group": "Campaign",    "permission": [      {        "name": "admin, marketing"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "count",            "description": "<p>Active Campaigns Count</p>"          }        ]      }    },    "error": {      "fields": {        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users (with permissions) can access the data</p>"          }        ]      }    },    "filename": "src/api/routes/v1/campaign.route.js",    "groupTitle": "Campaign"  },  {    "type": "post",    "url": "v1/campaign-category",    "title": "Create Campaign Category",    "description": "<p>Create a new campaign category</p>",    "version": "1.0.0",    "name": "CreateCampaignCategory",    "group": "CampaignCategory",    "permission": [      {        "name": "User"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "size": "...50",            "optional": false,            "field": "name",            "description": "<p>Campaign Category name</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": false,            "field": "active",            "description": "<p>Campaign Category active</p>"          }        ]      }    },    "success": {      "fields": {        "Created 201": [          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p>Campaign Category id</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Campaign Categoryname</p>"          },          {            "group": "Created 201",            "type": "Boolean",            "optional": false,            "field": "active",            "description": "<p>Campaign Category active</p>"          },          {            "group": "Created 201",            "type": "Date",            "optional": false,            "field": "createdAt",            "description": "<p>Timestamp</p>"          }        ]      }    },    "error": {      "fields": {        "Bad Request 400": [          {            "group": "Bad Request 400",            "optional": false,            "field": "ValidationError",            "description": "<p>Some parameters may contain invalid values</p>"          }        ],        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users (with permissions) can access the data</p>"          }        ],        "Forbidden 403": [          {            "group": "Forbidden 403",            "optional": false,            "field": "Forbidden",            "description": "<p>Only user with same id can access the data</p>"          }        ]      }    },    "filename": "src/api/routes/v1/campaign-category.route.js",    "groupTitle": "CampaignCategory"  },  {    "type": "get",    "url": "v1/campaign-category/:id",    "title": "Delete CampaignCategory",    "description": "<p>Delete campaign category information</p>",    "version": "1.0.0",    "name": "DeleteCampaignCategory",    "group": "CampaignCategory",    "permission": [      {        "name": "admin, marketing"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "success": {      "fields": {        "No Content 204": [          {            "group": "No Content 204",            "optional": false,            "field": "Successfully",            "description": "<p>deleted</p>"          }        ]      }    },    "error": {      "fields": {        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users (with permissions) can access the data</p>"          }        ],        "Forbidden 403": [          {            "group": "Forbidden 403",            "optional": false,            "field": "Forbidden",            "description": "<p>Only user with same id can access the data</p>"          }        ],        "Not Found 404": [          {            "group": "Not Found 404",            "optional": false,            "field": "NotFound",            "description": "<p>CampaignCategory does not exist</p>"          }        ]      }    },    "filename": "src/api/routes/v1/campaign-category.route.js",    "groupTitle": "CampaignCategory"  },  {    "type": "get",    "url": "v1/campaign-category/:id",    "title": "Get CampaignCategory",    "description": "<p>Get campaign category information</p>",    "version": "1.0.0",    "name": "GetCampaignCategory",    "group": "CampaignCategory",    "permission": [      {        "name": "admin, marketing"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p>Campaign Category id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Campaign Categoryname</p>"          },          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "active",            "description": "<p>Campaign Category active</p>"          },          {            "group": "Success 200",            "type": "Date",            "optional": false,            "field": "createdAt",            "description": "<p>Timestamp</p>"          }        ]      }    },    "error": {      "fields": {        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users (with permissions) can access the data</p>"          }        ],        "Forbidden 403": [          {            "group": "Forbidden 403",            "optional": false,            "field": "Forbidden",            "description": "<p>Only user with same id can access the data</p>"          }        ],        "Not Found 404": [          {            "group": "Not Found 404",            "optional": false,            "field": "NotFound",            "description": "<p>CampaignCategory does not exist</p>"          }        ]      }    },    "filename": "src/api/routes/v1/campaign-category.route.js",    "groupTitle": "CampaignCategory"  },  {    "type": "get",    "url": "v1/campaign-category",    "title": "List all CampaignCategory",    "description": "<p>List all campaign category information</p>",    "version": "1.0.0",    "name": "ListCampaignCategory",    "group": "CampaignCategory",    "permission": [      {        "name": "admin, marketing"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "size": "1-",            "optional": true,            "field": "page",            "defaultValue": "1",            "description": "<p>List page</p>"          },          {            "group": "Parameter",            "type": "Number",            "size": "1-100",            "optional": true,            "field": "limit",            "defaultValue": "10",            "description": "<p>Results per page</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "campaignCategories",            "description": "<p>List of CampaignCategory.</p>"          }        ]      }    },    "error": {      "fields": {        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users (with permissions) can access the data</p>"          }        ],        "Forbidden 403": [          {            "group": "Forbidden 403",            "optional": false,            "field": "Forbidden",            "description": "<p>Only user with same id can access the data</p>"          }        ],        "Not Found 404": [          {            "group": "Not Found 404",            "optional": false,            "field": "NotFound",            "description": "<p>CampaignCategory does not exist</p>"          }        ]      }    },    "filename": "src/api/routes/v1/campaign-category.route.js",    "groupTitle": "CampaignCategory"  },  {    "type": "put",    "url": "v1/campaign-category",    "title": "Update Campaign Category",    "description": "<p>Update a campaign category</p>",    "version": "1.0.0",    "name": "UpdateCampaignCategory",    "group": "CampaignCategory",    "permission": [      {        "name": "User"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p>Campaign Category id</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "...50",            "optional": false,            "field": "name",            "description": "<p>Campaign Category name</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": false,            "field": "active",            "description": "<p>Campaign Category active</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p>Campaign Category id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Campaign Categoryname</p>"          },          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "active",            "description": "<p>Campaign Category active</p>"          },          {            "group": "Success 200",            "type": "Date",            "optional": false,            "field": "createdAt",            "description": "<p>Timestamp</p>"          }        ]      }    },    "error": {      "fields": {        "Bad Request 400": [          {            "group": "Bad Request 400",            "optional": false,            "field": "ValidationError",            "description": "<p>Some parameters may contain invalid values</p>"          }        ],        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users (with permissions) can access the data</p>"          }        ],        "Forbidden 403": [          {            "group": "Forbidden 403",            "optional": false,            "field": "Forbidden",            "description": "<p>Only user with same id can access the data</p>"          }        ],        "Not Found 404": [          {            "group": "Not Found 404",            "optional": false,            "field": "NotFound",            "description": "<p>CampaignCategory does not exist</p>"          }        ]      }    },    "filename": "src/api/routes/v1/campaign-category.route.js",    "groupTitle": "CampaignCategory"  },  {    "type": "post",    "url": "v1/campaign",    "title": "Create Campaign",    "description": "<p>Create a new campaign</p>",    "version": "1.0.0",    "name": "CreateCampaign",    "group": "Campaign",    "permission": [      {        "name": "User"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "size": "...50",            "optional": false,            "field": "name",            "description": "<p>Campaign name</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "...500",            "optional": false,            "field": "description",            "description": "<p>Campaign description</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "...200",            "optional": false,            "field": "socialMediaTitle",            "description": "<p>Campaign socialMediaTitle</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "...500",            "optional": false,            "field": "socialMediaDescription",            "description": "<p>Campaign socialMediaDescription</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "campaignCategoryId",            "description": "<p>Campaign campaignCategoryId</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "autoResponderId",            "description": "<p>Campaign autoResponderId</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": false,            "field": "active",            "description": "<p>Campaign active</p>"          },          {            "group": "Parameter",            "type": "Object",            "optional": false,            "field": "body",            "description": "<p>Campaign lp template body</p>"          }        ]      },      "examples": [        {          "title": "Request-Example:",          "content": "\n{\n  \"name\":\"Campanha 4\",\n  \"description\": \"Campanha 4 Desc\",\n  \"socialMediaTitle\": \"Wolf Trade Club - Campanha 1\",\n  \"socialMediaDescription\": \"Wolf Trade Club - Campanha 1\",\n  \"socialMediaImageURL\": \"https://s3.amazonaws.com/sga-app-images/campaigns/lp-social-media-1.png\",\n  \"active\": true,\n  \"body\" : {\n        \"f-title\" : {\n            \"label\" : \"Título\",\n            \"value\" : \"MUDE SUA VIDA COM A WOLF TRADE!\"\n        },\n        \"f-subtitle\" : {\n            \"label\" : \"Subtítulo\",\n            \"value\" : \"A Wolf é a escolha certa para você e para todos aqueles que se encontram inconformados com a própria condição financeira; é o caminho correto para quem quer a alcançar os seus maiores sonhos de maneira simples e rápida.\"\n        },\n        \"f-contactTitle\" : {\n            \"label\" : \"Título de Contato\",\n            \"value\" : \"Fale Conosco\"\n        },\n        \"f-contactLine1\" : {\n            \"label\" : \"Contato Linha 1\",\n            \"value\" : \"Rua do Sol, 100\"\n        },\n        \"f-contactLine2\" : {\n            \"label\" : \"Contato Linha 2\",\n            \"value\" : \"Mercês - Curitiba - PR\"\n        },\n        \"f-contactLine3\" : {\n            \"label\" : \"Contato Linha 3\",\n            \"value\" : \"CEP 80.000-000\"\n        },\n        \"f-contactLine4\" : {\n            \"label\" : \"Contato Linha 4\",\n            \"value\" : \"+55 41 4321-1234\"\n        },\n        \"f-finalMessage\" : {\n            \"label\" : \"Mensagem final\",\n            \"value\" : \"Acreditamos fortemente e temos provado que é possível fazer o dinheiro trabalhar para você e que isso tem o poder de transformar verdadeiramente sua vida.\"\n        }\n    },\n  \"autoResponderId\" : \"5b9714a4f11f3b0fb0f8b330\",\n  \"lpTemplateId\" : \"5b9714a4f11f3b0fb0f8b330\",\n  \"campaignCategoryId\":\"5b819c379799b806e79b8a3b\"\n }",          "type": "json"        }      ]    },    "success": {      "fields": {        "Created 201": [          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p>Campaign id</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Campaign name</p>"          },          {            "group": "Created 201",            "type": "Boolean",            "optional": false,            "field": "active",            "description": "<p>Campaign active</p>"          },          {            "group": "Created 201",            "type": "Date",            "optional": false,            "field": "createdAt",            "description": "<p>Timestamp</p>"          }        ]      }    },    "error": {      "fields": {        "Bad Request 400": [          {            "group": "Bad Request 400",            "optional": false,            "field": "ValidationError",            "description": "<p>Some parameters may contain invalid values</p>"          }        ],        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users (with permissions) can access the data</p>"          }        ],        "Forbidden 403": [          {            "group": "Forbidden 403",            "optional": false,            "field": "Forbidden",            "description": "<p>Only user with same id can access the data</p>"          }        ]      }    },    "filename": "src/api/routes/v1/campaign.route.js",    "groupTitle": "Campaign"  },  {    "type": "get",    "url": "v1/campaign/:id",    "title": "Delete Campaigns",    "description": "<p>Delete campaign information</p>",    "version": "1.0.0",    "name": "DeleteCampaign",    "group": "Campaign",    "permission": [      {        "name": "admin, marketing"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "success": {      "fields": {        "No Content 204": [          {            "group": "No Content 204",            "optional": false,            "field": "Successfully",            "description": "<p>deleted</p>"          }        ]      }    },    "error": {      "fields": {        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users (with permissions) can access the data</p>"          }        ],        "Forbidden 403": [          {            "group": "Forbidden 403",            "optional": false,            "field": "Forbidden",            "description": "<p>Only user with same id can access the data</p>"          }        ],        "Not Found 404": [          {            "group": "Not Found 404",            "optional": false,            "field": "NotFound",            "description": "<p>Campaign does not exist</p>"          }        ]      }    },    "filename": "src/api/routes/v1/campaign.route.js",    "groupTitle": "Campaign"  },  {    "type": "get",    "url": "v1/campaign/:id",    "title": "Get Campaign",    "description": "<p>Get campaign information</p>",    "version": "1.0.0",    "name": "GetCampaign",    "group": "Campaign",    "permission": [      {        "name": "admin, marketing"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p>Campaign id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Campaign name</p>"          },          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "active",            "description": "<p>Campaign active</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "lpTemplateId",            "description": "<p>Campaign lp template id</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "body",            "description": "<p>Campaign lp template body</p>"          },          {            "group": "Success 200",            "type": "Date",            "optional": false,            "field": "createdAt",            "description": "<p>Timestamp</p>"          }        ]      }    },    "error": {      "fields": {        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users (with permissions) can access the data</p>"          }        ],        "Forbidden 403": [          {            "group": "Forbidden 403",            "optional": false,            "field": "Forbidden",            "description": "<p>Only user with same id can access the data</p>"          }        ],        "Not Found 404": [          {            "group": "Not Found 404",            "optional": false,            "field": "NotFound",            "description": "<p>Campaign does not exist</p>"          }        ]      }    },    "filename": "src/api/routes/v1/campaign.route.js",    "groupTitle": "Campaign"  },  {    "type": "get",    "url": "v1/campaign/:id/leads",    "title": "List Leads of a Campaign",    "description": "<p>List leads of a campain</p>",    "version": "1.0.0",    "name": "GetCampaignLeads",    "group": "Campaign",    "permission": [      {        "name": "admin, marketing"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "size": "1-",            "optional": true,            "field": "page",            "defaultValue": "1",            "description": "<p>List page</p>"          },          {            "group": "Parameter",            "type": "Number",            "size": "1-100",            "optional": true,            "field": "limit",            "defaultValue": "10",            "description": "<p>Results per page</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "leads",            "description": "<p>List of campaign Leads.</p>"          }        ]      }    },    "error": {      "fields": {        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users (with permissions) can access the data</p>"          }        ],        "Forbidden 403": [          {            "group": "Forbidden 403",            "optional": false,            "field": "Forbidden",            "description": "<p>Only user with same id can access the data</p>"          }        ],        "Not Found 404": [          {            "group": "Not Found 404",            "optional": false,            "field": "NotFound",            "description": "<p>Not found</p>"          }        ],        "No Content 204": [          {            "group": "No Content 204",            "optional": false,            "field": "NoContent",            "description": "<p>No content</p>"          }        ]      }    },    "filename": "src/api/routes/v1/campaign.route.js",    "groupTitle": "Campaign"  },  {    "type": "get",    "url": "v1/campaign",    "title": "List all Campaign",    "description": "<p>List all campaign  information</p>",    "version": "1.0.0",    "name": "ListCampaign",    "group": "Campaign",    "permission": [      {        "name": "admin, marketing"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "size": "1-",            "optional": true,            "field": "page",            "defaultValue": "1",            "description": "<p>List page</p>"          },          {            "group": "Parameter",            "type": "Number",            "size": "1-100",            "optional": true,            "field": "limit",            "defaultValue": "10",            "description": "<p>Results per page</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "campaigns",            "description": "<p>List of Campaign.</p>"          }        ]      }    },    "error": {      "fields": {        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users (with permissions) can access the data</p>"          }        ],        "Forbidden 403": [          {            "group": "Forbidden 403",            "optional": false,            "field": "Forbidden",            "description": "<p>Only user with same id can access the data</p>"          }        ],        "Not Found 404": [          {            "group": "Not Found 404",            "optional": false,            "field": "NotFound",            "description": "<p>Campaign does not exist</p>"          }        ]      }    },    "filename": "src/api/routes/v1/campaign.route.js",    "groupTitle": "Campaign"  },  {    "type": "put",    "url": "v1/campaign",    "title": "Update Campaign",    "description": "<p>Update a campaign</p>",    "version": "1.0.0",    "name": "UpdateCampaign",    "group": "Campaign",    "permission": [      {        "name": "User"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p>Campaign id</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "...50",            "optional": false,            "field": "name",            "description": "<p>Campaign name</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "...500",            "optional": false,            "field": "description",            "description": "<p>Campaign description</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "...200",            "optional": false,            "field": "socialMediaTitle",            "description": "<p>Campaign socialMediaTitle</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "...500",            "optional": false,            "field": "socialMediaDescription",            "description": "<p>Campaign socialMediaDescription</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "campaignCategoryId",            "description": "<p>Campaign campaignCategoryId</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "autoResponderId",            "description": "<p>Campaign autoResponderId</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": false,            "field": "active",            "description": "<p>Campaign active</p>"          },          {            "group": "Parameter",            "type": "Object",            "optional": false,            "field": "body",            "description": "<p>Campaign lp template body</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p>Campaign id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Campaign name</p>"          },          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "active",            "description": "<p>Campaign active</p>"          },          {            "group": "Success 200",            "type": "Date",            "optional": false,            "field": "createdAt",            "description": "<p>Timestamp</p>"          }        ]      }    },    "error": {      "fields": {        "Bad Request 400": [          {            "group": "Bad Request 400",            "optional": false,            "field": "ValidationError",            "description": "<p>Some parameters may contain invalid values</p>"          }        ],        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users (with permissions) can access the data</p>"          }        ],        "Forbidden 403": [          {            "group": "Forbidden 403",            "optional": false,            "field": "Forbidden",            "description": "<p>Only user with same id can access the data</p>"          }        ],        "Not Found 404": [          {            "group": "Not Found 404",            "optional": false,            "field": "NotFound",            "description": "<p>Campaign does not exist</p>"          }        ]      }    },    "filename": "src/api/routes/v1/campaign.route.js",    "groupTitle": "Campaign"  },  {    "type": "post",    "url": "v1/course-category",    "title": "Create Course Category",    "description": "<p>Create a new Course Category</p>",    "version": "1.0.0",    "name": "CreateCourseCategory",    "group": "CourseCategory",    "permission": [      {        "name": "admin"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Course Category name</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "description",            "description": "<p>Course Category description</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": false,            "field": "active",            "description": "<p>Course Category active</p>"          }        ]      }    },    "success": {      "fields": {        "Created 201": [          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p>Course Category id</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Course Category name</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "description",            "description": "<p>Course Category description</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "active",            "description": "<p>Course Category active</p>"          },          {            "group": "Created 201",            "type": "Number",            "optional": false,            "field": "numberOfCourses",            "description": "<p>Course Category number of courses</p>"          },          {            "group": "Created 201",            "type": "Date",            "optional": false,            "field": "createdAt",            "description": "<p>Timestamp</p>"          }        ]      }    },    "error": {      "fields": {        "Bad Request 400": [          {            "group": "Bad Request 400",            "optional": false,            "field": "ValidationError",            "description": "<p>Some parameters may contain invalid values</p>"          }        ],        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users (with permissions) can access the data</p>"          }        ]      }    },    "filename": "src/api/routes/v1/course-category.route.js",    "groupTitle": "CourseCategory"  },  {    "type": "get",    "url": "v1/course-category/:id",    "title": "Delete CourseCategory",    "description": "<p>Delete Course Category information</p>",    "version": "1.0.0",    "name": "DeleteCourseCategory",    "group": "CourseCategory",    "permission": [      {        "name": "admin"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "success": {      "fields": {        "No Content 204": [          {            "group": "No Content 204",            "optional": false,            "field": "Successfully",            "description": "<p>deleted</p>"          }        ]      }    },    "error": {      "fields": {        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users (with permissions) can access the data</p>"          }        ],        "Not Found 404": [          {            "group": "Not Found 404",            "optional": false,            "field": "NotFound",            "description": "<p>CourseCategory does not exist</p>"          }        ]      }    },    "filename": "src/api/routes/v1/course-category.route.js",    "groupTitle": "CourseCategory"  },  {    "type": "get",    "url": "v1/course-category/:id",    "title": "Get CourseCategory",    "description": "<p>Get Course Category information</p>",    "version": "1.0.0",    "name": "GetCourseCategory",    "group": "CourseCategory",    "permission": [      {        "name": "admin, marketing"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p>Course Category id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Course Category name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "description",            "description": "<p>Course Category description</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "active",            "description": "<p>Course Category active</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "numberOfCourses",            "description": "<p>Course Category number of courses</p>"          },          {            "group": "Success 200",            "type": "Date",            "optional": false,            "field": "createdAt",            "description": "<p>Timestamp</p>"          }        ]      }    },    "error": {      "fields": {        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users (with permissions) can access the data</p>"          }        ],        "Not Found 404": [          {            "group": "Not Found 404",            "optional": false,            "field": "NotFound",            "description": "<p>CourseCategory does not exist</p>"          }        ]      }    },    "filename": "src/api/routes/v1/course-category.route.js",    "groupTitle": "CourseCategory"  },  {    "type": "get",    "url": "v1/course-category",    "title": "List all CourseCategory",    "description": "<p>List all Course Category information</p>",    "version": "1.0.0",    "name": "ListCourseCategory",    "group": "CourseCategory",    "permission": [      {        "name": "admin, marketing"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "size": "1-",            "optional": true,            "field": "page",            "defaultValue": "1",            "description": "<p>List page</p>"          },          {            "group": "Parameter",            "type": "Number",            "size": "1-100",            "optional": true,            "field": "limit",            "defaultValue": "10",            "description": "<p>Results per page</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "courseCategories",            "description": "<p>List of Course Category.</p>"          }        ]      }    },    "error": {      "fields": {        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users (with permissions) can access the data</p>"          }        ],        "Not Found 404": [          {            "group": "Not Found 404",            "optional": false,            "field": "NotFound",            "description": "<p>CourseCategory does not exist</p>"          }        ]      }    },    "filename": "src/api/routes/v1/course-category.route.js",    "groupTitle": "CourseCategory"  },  {    "type": "put",    "url": "v1/course-category",    "title": "Update Course Category",    "description": "<p>Update a Course Category</p>",    "version": "1.0.0",    "name": "UpdateCourseCategory",    "group": "CourseCategory",    "permission": [      {        "name": "admin"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p>Course Category id</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Course Category name</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "description",            "description": "<p>Course Category description</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": false,            "field": "active",            "description": "<p>Course Category active</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p>Course Category id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Course Category name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "description",            "description": "<p>Course Category description</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "active",            "description": "<p>Course Category active</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "numberOfCourses",            "description": "<p>Course Category number of courses</p>"          },          {            "group": "Success 200",            "type": "Date",            "optional": false,            "field": "createdAt",            "description": "<p>Timestamp</p>"          }        ]      }    },    "error": {      "fields": {        "Bad Request 400": [          {            "group": "Bad Request 400",            "optional": false,            "field": "ValidationError",            "description": "<p>Some parameters may contain invalid values</p>"          }        ],        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users (with permissions) can access the data</p>"          }        ],        "Not Found 404": [          {            "group": "Not Found 404",            "optional": false,            "field": "NotFound",            "description": "<p>CourseCategory does not exist</p>"          }        ]      }    },    "filename": "src/api/routes/v1/course-category.route.js",    "groupTitle": "CourseCategory"  },  {    "type": "post",    "url": "v1/course",    "title": "Create Course",    "description": "<p>Create a new Course</p>",    "version": "1.0.0",    "name": "CreateCourse",    "group": "Course",    "permission": [      {        "name": "admin"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p>Course  id</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "...50",            "optional": false,            "field": "name",            "description": "<p>Course  name</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "...200",            "optional": false,            "field": "description",            "description": "<p>Course  description</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": false,            "field": "active",            "description": "<p>Course  active</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": false,            "field": "hasQuestions",            "description": "<p>Course  hasQuestions</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "courseCategoryId",            "description": "<p>Course  course category id</p>"          }        ]      }    },    "success": {      "fields": {        "Created 201": [          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p>Course  id</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Course  name</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "description",            "description": "<p>Course  description</p>"          },          {            "group": "Created 201",            "type": "Boolean",            "optional": false,            "field": "active",            "description": "<p>Course  active</p>"          },          {            "group": "Created 201",            "type": "Boolean",            "optional": false,            "field": "hasQuestions",            "description": "<p>Course  hasQuestions</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "coverImageURL",            "description": "<p>Course  cover image url</p>"          },          {            "group": "Created 201",            "type": "Number",            "optional": false,            "field": "numberOfLessons",            "description": "<p>Course  number of lessons</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "courseCategoryId",            "description": "<p>Course  course category id</p>"          },          {            "group": "Created 201",            "type": "Date",            "optional": false,            "field": "createdAt",            "description": "<p>Timestamp</p>"          }        ]      }    },    "error": {      "fields": {        "Bad Request 400": [          {            "group": "Bad Request 400",            "optional": false,            "field": "ValidationError",            "description": "<p>Some parameters may contain invalid values</p>"          }        ],        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users (with permissions) can access the data</p>"          }        ]      }    },    "filename": "src/api/routes/v1/course.route.js",    "groupTitle": "Course"  },  {    "type": "get",    "url": "v1/course/:id",    "title": "Delete Course",    "description": "<p>Delete Course  information</p>",    "version": "1.0.0",    "name": "DeleteCourse",    "group": "Course",    "permission": [      {        "name": "admin"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "success": {      "fields": {        "No Content 204": [          {            "group": "No Content 204",            "optional": false,            "field": "Successfully",            "description": "<p>deleted</p>"          }        ]      }    },    "error": {      "fields": {        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users (with permissions) can access the data</p>"          }        ],        "Not Found 404": [          {            "group": "Not Found 404",            "optional": false,            "field": "NotFound",            "description": "<p>Course does not exist</p>"          }        ]      }    },    "filename": "src/api/routes/v1/course.route.js",    "groupTitle": "Course"  },  {    "type": "get",    "url": "v1/course/:id",    "title": "Get Course",    "description": "<p>Get Course  information</p>",    "version": "1.0.0",    "name": "GetCourse",    "group": "Course",    "permission": [      {        "name": "admin, marketing"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p>Course  id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Course  name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "description",            "description": "<p>Course  description</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "active",            "description": "<p>Course  active</p>"          },          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "hasQuestions",            "description": "<p>Course  hasQuestions</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "coverImageURL",            "description": "<p>Course  cover image url</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "numberOfLessons",            "description": "<p>Course  number of lessons</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "courseCategoryId",            "description": "<p>Course  course category id</p>"          },          {            "group": "Success 200",            "type": "Date",            "optional": false,            "field": "createdAt",            "description": "<p>Timestamp</p>"          }        ]      }    },    "error": {      "fields": {        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users (with permissions) can access the data</p>"          }        ],        "Not Found 404": [          {            "group": "Not Found 404",            "optional": false,            "field": "NotFound",            "description": "<p>Course does not exist</p>"          }        ]      }    },    "filename": "src/api/routes/v1/course.route.js",    "groupTitle": "Course"  },  {    "type": "get",    "url": "v1/course",    "title": "List all Courses",    "description": "<p>List all Courses information</p>",    "version": "1.0.0",    "name": "ListCourse",    "group": "Course",    "permission": [      {        "name": "admin, marketing"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "size": "1-",            "optional": true,            "field": "page",            "defaultValue": "1",            "description": "<p>List page</p>"          },          {            "group": "Parameter",            "type": "Number",            "size": "1-100",            "optional": true,            "field": "limit",            "defaultValue": "10",            "description": "<p>Results per page</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "courses",            "description": "<p>List of Course.</p>"          }        ]      }    },    "error": {      "fields": {        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users (with permissions) can access the data</p>"          }        ],        "Not Found 404": [          {            "group": "Not Found 404",            "optional": false,            "field": "NotFound",            "description": "<p>Course does not exist</p>"          }        ]      }    },    "filename": "src/api/routes/v1/course.route.js",    "groupTitle": "Course"  },  {    "type": "put",    "url": "v1/course",    "title": "Update Course",    "description": "<p>Update a Course</p>",    "version": "1.0.0",    "name": "UpdateCourse",    "group": "Course",    "permission": [      {        "name": "admin"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p>Course  id</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "...50",            "optional": false,            "field": "name",            "description": "<p>Course  name</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "...200",            "optional": false,            "field": "description",            "description": "<p>Course  description</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": false,            "field": "active",            "description": "<p>Course  active</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": false,            "field": "hasQuestions",            "description": "<p>Course  hasQuestions</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "courseCategoryId",            "description": "<p>Course  course category id</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p>Course  id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Course  name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "description",            "description": "<p>Course  description</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "active",            "description": "<p>Course  active</p>"          },          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "hasQuestions",            "description": "<p>Course  hasQuestions</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "coverImageURL",            "description": "<p>Course  cover image url</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "numberOfLessons",            "description": "<p>Course  number of lessons</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "courseCategoryId",            "description": "<p>Course  course category id</p>"          },          {            "group": "Success 200",            "type": "Date",            "optional": false,            "field": "createdAt",            "description": "<p>Timestamp</p>"          }        ]      }    },    "error": {      "fields": {        "Bad Request 400": [          {            "group": "Bad Request 400",            "optional": false,            "field": "ValidationError",            "description": "<p>Some parameters may contain invalid values</p>"          }        ],        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users (with permissions) can access the data</p>"          }        ],        "Not Found 404": [          {            "group": "Not Found 404",            "optional": false,            "field": "NotFound",            "description": "<p>Course does not exist</p>"          }        ]      }    },    "filename": "src/api/routes/v1/course.route.js",    "groupTitle": "Course"  },  {    "type": "get",    "url": "v1/dashboard/expiration",    "title": "Subscription Expiration Date",    "description": "<p>Get user subscription expiration date</p>",    "version": "1.0.0",    "name": "GetDashboardExpiration",    "group": "Dashboard",    "permission": [      {        "name": "user"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "expiration",            "description": "<p>User's subscription expiration date</p>"          }        ]      }    },    "error": {      "fields": {        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users (with permissions) can access the data</p>"          }        ]      }    },    "filename": "src/api/routes/v1/dashboard.route.js",    "groupTitle": "Dashboard"  },  {    "type": "get",    "url": "v1/dashboard/financial-data",    "title": "Dashboard finanacial data",    "description": "<p>Get user financial data</p>",    "version": "1.0.0",    "name": "GetDashboardFinancialData",    "group": "Dashboard",    "permission": [      {        "name": "user"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "graduation",            "description": "<p>User's gradutaion</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "earnings",            "description": "<p>User's earnings</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "balance",            "description": "<p>User's balance</p>"          }        ]      }    },    "error": {      "fields": {        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users (with permissions) can access the data</p>"          }        ]      }    },    "filename": "src/api/routes/v1/dashboard.route.js",    "groupTitle": "Dashboard"  },  {    "type": "get",    "url": "v1/dashboard/urls",    "title": "Dashboard URLS",    "description": "<p>Get user affiliate and contact URLs</p>",    "version": "1.0.0",    "name": "GetDashboardURLS",    "group": "Dashboard",    "permission": [      {        "name": "user"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "affiliateURL",            "description": "<p>User's affiliate URL</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "contactURL",            "description": "<p>User's contact URL</p>"          }        ]      }    },    "error": {      "fields": {        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users (with permissions) can access the data</p>"          }        ]      }    },    "filename": "src/api/routes/v1/dashboard.route.js",    "groupTitle": "Dashboard"  },  {    "type": "post",    "url": "v1/exam",    "title": "Create Exam",    "description": "<p>Create a new Exam</p>",    "version": "1.0.0",    "name": "CreateExam",    "group": "Exam",    "permission": [      {        "name": "admin"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "courseId",            "description": "<p>Exam courseId</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": false,            "field": "active",            "description": "<p>Exam active</p>"          },          {            "group": "Parameter",            "type": "Object[]",            "optional": false,            "field": "questions",            "description": "<p>Exam questions</p>"          }        ]      },      "examples": [        {          "title": "Request-Example:",          "content": "HTTP/1.1 200 OK\n{\n  \"courseId\" : \"ad87as8d79a8s79d8a7d\",\n  \"active\": true,\n  \"questions\":[{\n     \"question\": \"Quem descobriu o Brasil?\",\n     \"answers\": [\n       {\n         \"answer\": \"Cristovao Colombo\",\n         \"correct\": false\n       },\n       {\n         \"answer\": \"Pedro Alvares Cabral\",\n         \"correct\": true\n       },\n       {\n         \"answer\": \"Nelson Ned\",\n         \"correct\": false\n       }\n     ]\n  }]\n}",          "type": "json"        }      ]    },    "success": {      "fields": {        "Created 201": [          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p>Exam id</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "courseId",            "description": "<p>Exam courseId</p>"          },          {            "group": "Created 201",            "type": "Booleab",            "optional": false,            "field": "active",            "description": "<p>Exam active</p>"          },          {            "group": "Created 201",            "type": "Object[]",            "optional": false,            "field": "questions",            "description": "<p>Exam questions</p>"          }        ]      }    },    "error": {      "fields": {        "Bad Request 400": [          {            "group": "Bad Request 400",            "optional": false,            "field": "ValidationError",            "description": "<p>Some parameters may contain invalid values</p>"          }        ],        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users (with permissions) can access the data</p>"          }        ]      }    },    "filename": "src/api/routes/v1/exam.route.js",    "groupTitle": "Exam"  },  {    "type": "get",    "url": "v1/exam/:id",    "title": "Delete Exam",    "description": "<p>Delete Exam information</p>",    "version": "1.0.0",    "name": "DeleteExam",    "group": "Exam",    "permission": [      {        "name": "admin"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "success": {      "fields": {        "No Content 204": [          {            "group": "No Content 204",            "optional": false,            "field": "Successfully",            "description": "<p>deleted</p>"          }        ]      }    },    "error": {      "fields": {        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users (with permissions) can access the data</p>"          }        ],        "Not Found 404": [          {            "group": "Not Found 404",            "optional": false,            "field": "NotFound",            "description": "<p>Exam does not exist</p>"          }        ]      }    },    "filename": "src/api/routes/v1/exam.route.js",    "groupTitle": "Exam"  },  {    "type": "get",    "url": "v1/exam/:id",    "title": "Get Exam",    "description": "<p>Get Exam information</p>",    "version": "1.0.0",    "name": "GetExam",    "group": "Exam",    "permission": [      {        "name": "admin"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p>Exam id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "courseId",            "description": "<p>Exam courseId</p>"          },          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "active",            "description": "<p>Exam active</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "questions",            "description": "<p>Exam description</p>"          }        ]      }    },    "error": {      "fields": {        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users (with permissions) can access the data</p>"          }        ],        "Not Found 404": [          {            "group": "Not Found 404",            "optional": false,            "field": "NotFound",            "description": "<p>Exam does not exist</p>"          }        ]      }    },    "filename": "src/api/routes/v1/exam.route.js",    "groupTitle": "Exam"  },  {    "type": "get",    "url": "v1/exam",    "title": "List all Exam",    "description": "<p>List all Exam information</p>",    "version": "1.0.0",    "name": "ListExam",    "group": "Exam",    "permission": [      {        "name": "admin"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "size": "1-",            "optional": true,            "field": "page",            "defaultValue": "1",            "description": "<p>List page</p>"          },          {            "group": "Parameter",            "type": "Number",            "size": "1-100",            "optional": true,            "field": "limit",            "defaultValue": "10",            "description": "<p>Results per page</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "courseCategories",            "description": "<p>List of Exam.</p>"          }        ]      }    },    "error": {      "fields": {        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users (with permissions) can access the data</p>"          }        ],        "Not Found 404": [          {            "group": "Not Found 404",            "optional": false,            "field": "NotFound",            "description": "<p>Exam does not exist</p>"          }        ]      }    },    "filename": "src/api/routes/v1/exam.route.js",    "groupTitle": "Exam"  },  {    "type": "put",    "url": "v1/exam",    "title": "Update Exam",    "description": "<p>Update a Exam</p>",    "version": "1.0.0",    "name": "UpdateExam",    "group": "Exam",    "permission": [      {        "name": "admin"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p>Exam id</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "courseId",            "description": "<p>Exam courseId</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": false,            "field": "active",            "description": "<p>Exam active</p>"          },          {            "group": "Parameter",            "type": "Object[]",            "optional": false,            "field": "questions",            "description": "<p>Exam questions</p>"          }        ]      },      "examples": [        {          "title": "Request-Example:",          "content": "HTTP/1.1 200 OK\n{\n  \"courseId\" : \"ad87as8d79a8s79d8a7d\",\n  \"active\": true,\n  \"questions\":[{\n     \"question\": \"Quem descobriu o Brasil?\",\n     \"answers\": [\n       {\n         \"answer\": \"Cristovao Colombo\",\n         \"correct\": false\n       },\n       {\n         \"answer\": \"Pedro Alvares Cabral\",\n         \"correct\": true\n       },\n       {\n         \"answer\": \"Nelson Ned\",\n         \"correct\": false\n       }\n     ]\n  }]\n}",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p>Exam id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "courseId",            "description": "<p>Exam courseId</p>"          },          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "active",            "description": "<p>Exam active</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "questions",            "description": "<p>Exam description</p>"          }        ]      }    },    "error": {      "fields": {        "Bad Request 400": [          {            "group": "Bad Request 400",            "optional": false,            "field": "ValidationError",            "description": "<p>Some parameters may contain invalid values</p>"          }        ],        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users (with permissions) can access the data</p>"          }        ],        "Not Found 404": [          {            "group": "Not Found 404",            "optional": false,            "field": "NotFound",            "description": "<p>Exam does not exist</p>"          }        ]      }    },    "filename": "src/api/routes/v1/exam.route.js",    "groupTitle": "Exam"  },  {    "type": "get",    "url": "v1/group/:id",    "title": "Get Group",    "description": "<p>Get croup information</p>",    "version": "1.0.0",    "name": "GetGroup",    "group": "Group",    "permission": [      {        "name": "user"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Group name</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "description",            "description": "<p>Group description</p>"          }        ]      }    },    "error": {      "fields": {        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users (with permissions) can access the data</p>"          }        ],        "Not Found 404": [          {            "group": "Not Found 404",            "optional": false,            "field": "NotFound",            "description": "<p>Group does not exist</p>"          }        ]      }    },    "filename": "src/api/routes/v1/group.route.js",    "groupTitle": "Group"  },  {    "type": "get",    "url": "v1/group",    "title": "List all Groups",    "description": "<p>List all group  information</p>",    "version": "1.0.0",    "name": "ListGroup",    "group": "Group",    "permission": [      {        "name": "user"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "size": "1-",            "optional": true,            "field": "page",            "defaultValue": "1",            "description": "<p>List page</p>"          },          {            "group": "Parameter",            "type": "Number",            "size": "1-100",            "optional": true,            "field": "limit",            "defaultValue": "10",            "description": "<p>Results per page</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Group name</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "description",            "description": "<p>Group description</p>"          }        ]      }    },    "error": {      "fields": {        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users (with permissions) can access the data</p>"          }        ],        "Not Found 204": [          {            "group": "Not Found 204",            "optional": false,            "field": "NoContent",            "description": "<p>Group does not exist</p>"          }        ]      }    },    "filename": "src/api/routes/v1/group.route.js",    "groupTitle": "Group"  },  {    "type": "post",    "url": "v1/lead",    "title": "Create Lead",    "description": "<p>Create a new lead</p>",    "version": "1.0.0",    "name": "CreateLead",    "group": "Lead",    "permission": [      {        "name": "admin, marketing"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "size": "...50",            "optional": false,            "field": "name",            "description": "<p>Lead name</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "...50",            "optional": false,            "field": "email",            "description": "<p>Lead email</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "...50",            "optional": false,            "field": "phone",            "description": "<p>Lead phone</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "city",            "description": "<p>Lead city</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "...2",            "optional": false,            "field": "state",            "description": "<p>Lead state</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "...500",            "optional": false,            "field": "additionalInfo",            "description": "<p>Lead additional info</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "campaignId",            "description": "<p>Lead campaign id</p>"          }        ]      }    },    "success": {      "fields": {        "Created 201": [          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p>Lead id</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Lead name</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>Lead email</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "phone",            "description": "<p>Lead phone</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "city",            "description": "<p>Lead city</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "state",            "description": "<p>Lead state</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "additionalInfo",            "description": "<p>Lead additional info</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "campaignId",            "description": "<p>Lead campaign id</p>"          },          {            "group": "Created 201",            "type": "Date",            "optional": false,            "field": "createdAt",            "description": "<p>Timestamp</p>"          }        ]      }    },    "error": {      "fields": {        "Bad Request 400": [          {            "group": "Bad Request 400",            "optional": false,            "field": "ValidationError",            "description": "<p>Some parameters may contain invalid values</p>"          }        ],        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users (with permissions) can create the data</p>"          }        ]      }    },    "filename": "src/api/routes/v1/lead.route.js",    "groupTitle": "Lead"  },  {    "type": "get",    "url": "v1/lead/:id",    "title": "Delete lead",    "description": "<p>Delete lead information</p>",    "version": "1.0.0",    "name": "DeleteLead",    "group": "Lead",    "permission": [      {        "name": "admin, marketing"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "success": {      "fields": {        "No Content 204": [          {            "group": "No Content 204",            "optional": false,            "field": "Successfully",            "description": "<p>deleted</p>"          }        ]      }    },    "error": {      "fields": {        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users (with permissions) can delete the data</p>"          }        ],        "Forbidden 403": [          {            "group": "Forbidden 403",            "optional": false,            "field": "Forbidden",            "description": "<p>Only user with same id or admins can delete the data</p>"          }        ],        "Not Found 404": [          {            "group": "Not Found 404",            "optional": false,            "field": "NotFound",            "description": "<p>Lead does not exist</p>"          }        ]      }    },    "filename": "src/api/routes/v1/lead.route.js",    "groupTitle": "Lead"  },  {    "type": "get",    "url": "v1/lead/:id",    "title": "Get Lead",    "description": "<p>Get lead information</p>",    "version": "1.0.0",    "name": "GetLead",    "group": "Lead",    "permission": [      {        "name": "admin, marketing"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p>Lead id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Lead name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>Lead email</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "phone",            "description": "<p>Lead phone</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "city",            "description": "<p>Lead city</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "state",            "description": "<p>Lead state</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "additionalInfo",            "description": "<p>Lead additional info</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "campaignId",            "description": "<p>Lead campaign id</p>"          },          {            "group": "Success 200",            "type": "Date",            "optional": false,            "field": "createdAt",            "description": "<p>Timestamp</p>"          }        ]      }    },    "error": {      "fields": {        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users (with permissions) can access the data</p>"          }        ],        "Forbidden 403": [          {            "group": "Forbidden 403",            "optional": false,            "field": "Forbidden",            "description": "<p>Only user with same id or admins can access the data</p>"          }        ],        "Not Found 404": [          {            "group": "Not Found 404",            "optional": false,            "field": "NotFound",            "description": "<p>Lead does not exist</p>"          }        ]      }    },    "filename": "src/api/routes/v1/lead.route.js",    "groupTitle": "Lead"  },  {    "type": "get",    "url": "v1/lead/count",    "title": "Count Leads",    "description": "<p>Return count of leads</p>",    "version": "1.0.0",    "name": "Lead",    "group": "Lead",    "permission": [      {        "name": "admin, marketing"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "count",            "description": "<p>Leads Count</p>"          }        ]      }    },    "error": {      "fields": {        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated Users can access the data</p>"          }        ]      }    },    "filename": "src/api/routes/v1/lead.route.js",    "groupTitle": "Lead"  },  {    "type": "get",    "url": "v1/lead",    "title": "List all Leads",    "description": "<p>List all leads  information</p>",    "version": "1.0.0",    "name": "ListLead",    "group": "Lead",    "permission": [      {        "name": "admin, marketing"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "size": "1-",            "optional": true,            "field": "page",            "defaultValue": "1",            "description": "<p>List page</p>"          },          {            "group": "Parameter",            "type": "Number",            "size": "1-100",            "optional": true,            "field": "limit",            "defaultValue": "10",            "description": "<p>Results per page</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "leads",            "description": "<p>List of Leads</p>"          }        ]      }    },    "error": {      "fields": {        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users (with permissions) can access the data</p>"          }        ]      }    },    "filename": "src/api/routes/v1/lead.route.js",    "groupTitle": "Lead"  },  {    "type": "put",    "url": "v1/lead",    "title": "Update Lead",    "description": "<p>Update a lead</p>",    "version": "1.0.0",    "name": "UpdateLead",    "group": "Lead",    "permission": [      {        "name": "admin, marketing"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p>Lead id</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "...50",            "optional": false,            "field": "name",            "description": "<p>Lead name</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "...50",            "optional": false,            "field": "email",            "description": "<p>Lead email</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "...50",            "optional": false,            "field": "phone",            "description": "<p>Lead phone</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "city",            "description": "<p>Lead city</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "...2",            "optional": false,            "field": "state",            "description": "<p>Lead state</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "...500",            "optional": false,            "field": "additionalInfo",            "description": "<p>Lead additional info</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "campaignId",            "description": "<p>Lead campaign id</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p>Lead id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Lead name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>Lead email</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "phone",            "description": "<p>Lead phone</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "city",            "description": "<p>Lead city</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "state",            "description": "<p>Lead state</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "additionalInfo",            "description": "<p>Lead additional info</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "campaignId",            "description": "<p>Lead campaign id</p>"          },          {            "group": "Success 200",            "type": "Date",            "optional": false,            "field": "createdAt",            "description": "<p>Timestamp</p>"          }        ]      }    },    "error": {      "fields": {        "Bad Request 400": [          {            "group": "Bad Request 400",            "optional": false,            "field": "ValidationError",            "description": "<p>Some parameters may contain invalid values</p>"          }        ],        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users (with permissions) can modify the data</p>"          }        ],        "Forbidden 403": [          {            "group": "Forbidden 403",            "optional": false,            "field": "Forbidden",            "description": "<p>Only user with same id or admins can modify the data</p>"          }        ],        "Not Found 404": [          {            "group": "Not Found 404",            "optional": false,            "field": "NotFound",            "description": "<p>Lead does not exist</p>"          }        ]      }    },    "filename": "src/api/routes/v1/lead.route.js",    "groupTitle": "Lead"  },  {    "type": "get",    "url": "v1/lesson/:id",    "title": "Delete Lesson",    "description": "<p>Delete Lesson  information</p>",    "version": "1.0.0",    "name": "DeleteLesson",    "group": "Lesson",    "permission": [      {        "name": "admin"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "success": {      "fields": {        "No Content 204": [          {            "group": "No Content 204",            "optional": false,            "field": "Successfully",            "description": "<p>deleted</p>"          }        ]      }    },    "error": {      "fields": {        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users (with permissions) can delete the data</p>"          }        ],        "Not Found 404": [          {            "group": "Not Found 404",            "optional": false,            "field": "NotFound",            "description": "<p>Lesson does not exist</p>"          }        ]      }    },    "filename": "src/api/routes/v1/lesson.route.js",    "groupTitle": "Lesson"  },  {    "type": "get",    "url": "v1/lesson/:id",    "title": "Get Lesson",    "description": "<p>Get Lesson  information</p>",    "version": "1.0.0",    "name": "GetLesson",    "group": "Lesson",    "permission": [      {        "name": "admin, marketing"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p>Lesson  id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Lesson  name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "description",            "description": "<p>Lesson  description</p>"          },          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "active",            "description": "<p>Lesson  active</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "order",            "description": "<p>Lesson  order</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "videoURL",            "description": "<p>Lesson  videoURL</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "courseId",            "description": "<p>Lesson  course id</p>"          },          {            "group": "Success 200",            "type": "Date",            "optional": false,            "field": "createdAt",            "description": "<p>Timestamp</p>"          }        ]      }    },    "error": {      "fields": {        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users (with permissions) can access the data</p>"          }        ],        "Not Found 404": [          {            "group": "Not Found 404",            "optional": false,            "field": "NotFound",            "description": "<p>Lesson does not exist</p>"          }        ]      }    },    "filename": "src/api/routes/v1/lesson.route.js",    "groupTitle": "Lesson"  },  {    "type": "get",    "url": "v1/lesson/:id/material",    "title": "List Materials of a Lesson",    "description": "<p>List materials of a lesson</p>",    "version": "1.0.0",    "name": "GetLessonMaterials",    "group": "Lesson",    "permission": [      {        "name": "admin, marketing"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "size": "1-",            "optional": true,            "field": "page",            "defaultValue": "1",            "description": "<p>List page</p>"          },          {            "group": "Parameter",            "type": "Number",            "size": "1-100",            "optional": true,            "field": "limit",            "defaultValue": "10",            "description": "<p>Results per page</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p>Material  id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Material  name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "description",            "description": "<p>Material  description</p>"          },          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "active",            "description": "<p>Material  active</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "materialTypeId",            "description": "<p>Material  material type id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "lessonId",            "description": "<p>Material  lesson id</p>"          },          {            "group": "Success 200",            "type": "Date",            "optional": false,            "field": "createdAt",            "description": "<p>Timestamp</p>"          }        ]      }    },    "error": {      "fields": {        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users (with permissions) can access the data</p>"          }        ],        "Not Found 404": [          {            "group": "Not Found 404",            "optional": false,            "field": "NotFound",            "description": "<p>NotFound</p>"          }        ]      }    },    "filename": "src/api/routes/v1/lesson.route.js",    "groupTitle": "Lesson"  },  {    "type": "get",    "url": "v1/lesson",    "title": "List all Lessons of a Course",    "description": "<p>List all Lessons information of a Course</p>",    "version": "1.0.0",    "name": "ListCourseLessons",    "group": "Lesson",    "permission": [      {        "name": "admin, marketing"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "size": "1-",            "optional": true,            "field": "page",            "defaultValue": "1",            "description": "<p>List page</p>"          },          {            "group": "Parameter",            "type": "Number",            "size": "1-100",            "optional": true,            "field": "limit",            "defaultValue": "10",            "description": "<p>Results per page</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>Course id</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "lessons",            "description": "<p>List of Lessons</p>"          }        ]      }    },    "error": {      "fields": {        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users (with permissions) can access the data</p>"          }        ],        "Not Found 404": [          {            "group": "Not Found 404",            "optional": false,            "field": "NotFound",            "description": "<p>Lesson does not exist</p>"          }        ]      }    },    "filename": "src/api/routes/v1/lesson.route.js",    "groupTitle": "Lesson"  },  {    "type": "get",    "url": "v1/lesson",    "title": "List all Lessons",    "description": "<p>List all Lessons information</p>",    "version": "1.0.0",    "name": "ListLesson",    "group": "Lesson",    "permission": [      {        "name": "admin, marketing"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "size": "1-",            "optional": true,            "field": "page",            "defaultValue": "1",            "description": "<p>List page</p>"          },          {            "group": "Parameter",            "type": "Number",            "size": "1-100",            "optional": true,            "field": "limit",            "defaultValue": "10",            "description": "<p>Results per page</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "lessons",            "description": "<p>List of Lessons</p>"          }        ]      }    },    "error": {      "fields": {        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users (with permissions) can access the data</p>"          }        ],        "Not Found 404": [          {            "group": "Not Found 404",            "optional": false,            "field": "NotFound",            "description": "<p>Lesson does not exist</p>"          }        ]      }    },    "filename": "src/api/routes/v1/lesson.route.js",    "groupTitle": "Lesson"  },  {    "type": "put",    "url": "v1/lesson",    "title": "Update Lesson",    "description": "<p>Update a Lesson</p>",    "version": "1.0.0",    "name": "UpdateLesson",    "group": "Lesson",    "permission": [      {        "name": "admin"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "size": "...50",            "optional": false,            "field": "name",            "description": "<p>Lesson  name</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "...200",            "optional": false,            "field": "description",            "description": "<p>Lesson  description</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": false,            "field": "active",            "description": "<p>Lesson  active</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "order",            "description": "<p>Lesson  order</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "...300",            "optional": false,            "field": "videoURL",            "description": "<p>Lesson  videoURL</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "courseId",            "description": "<p>Lesson  course id</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p>Lesson  id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Lesson  name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "description",            "description": "<p>Lesson  description</p>"          },          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "active",            "description": "<p>Lesson  active</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "order",            "description": "<p>Lesson  order</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "videoURL",            "description": "<p>Lesson  videoURL</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "courseId",            "description": "<p>Lesson  course id</p>"          },          {            "group": "Success 200",            "type": "Date",            "optional": false,            "field": "createdAt",            "description": "<p>Timestamp</p>"          }        ]      }    },    "error": {      "fields": {        "Bad Request 400": [          {            "group": "Bad Request 400",            "optional": false,            "field": "ValidationError",            "description": "<p>Some parameters may contain invalid values</p>"          }        ],        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users (with permissions) can modify the data</p>"          }        ],        "Not Found 404": [          {            "group": "Not Found 404",            "optional": false,            "field": "NotFound",            "description": "<p>Lesson does not exist</p>"          }        ]      }    },    "filename": "src/api/routes/v1/lesson.route.js",    "groupTitle": "Lesson"  },  {    "type": "post",    "url": "v1/lesson",    "title": "Create Lesson",    "description": "<p>Create a new Lesson</p>",    "version": "1.0.0",    "name": "createLesson",    "group": "Lesson",    "permission": [      {        "name": "admin"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "size": "...50",            "optional": false,            "field": "name",            "description": "<p>Lesson  name</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "...200",            "optional": false,            "field": "description",            "description": "<p>Lesson  description</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": false,            "field": "active",            "description": "<p>Lesson  active</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "order",            "description": "<p>Lesson  order</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "...300",            "optional": false,            "field": "videoURL",            "description": "<p>Lesson  videoURL</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "courseId",            "description": "<p>Lesson  course id</p>"          }        ]      }    },    "success": {      "fields": {        "Created 201": [          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p>Lesson  id</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Lesson  name</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "description",            "description": "<p>Lesson  description</p>"          },          {            "group": "Created 201",            "type": "Boolean",            "optional": false,            "field": "active",            "description": "<p>Lesson  active</p>"          },          {            "group": "Created 201",            "type": "Number",            "optional": false,            "field": "order",            "description": "<p>Lesson  order</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "videoURL",            "description": "<p>Lesson  videoURL</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "courseId",            "description": "<p>Lesson  course id</p>"          },          {            "group": "Created 201",            "type": "Date",            "optional": false,            "field": "createdAt",            "description": "<p>Timestamp</p>"          }        ]      }    },    "error": {      "fields": {        "Bad Request 400": [          {            "group": "Bad Request 400",            "optional": false,            "field": "ValidationError",            "description": "<p>Some parameters may contain invalid values</p>"          }        ],        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users (with permissions) can create the data</p>"          }        ]      }    },    "filename": "src/api/routes/v1/lesson.route.js",    "groupTitle": "Lesson"  },  {    "type": "get",    "url": "v1/lp-template/:id",    "title": "Get LpTemplate",    "description": "<p>Get LpTemplate  information</p>",    "version": "1.0.0",    "name": "GetLpTemplate",    "group": "LpTemplate",    "permission": [      {        "name": "admin, marketing"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p>LpTemplate  id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>LpTemplate  name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "description",            "description": "<p>LpTemplate  description</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "active",            "description": "<p>LpTemplate  active</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "coverImageURL",            "description": "<p>LpTemplate  cover image URL</p>"          },          {            "group": "Success 200",            "type": "Date",            "optional": false,            "field": "createdAt",            "description": "<p>Timestamp</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "\n{\n   \"_id\" : ObjectId(\"5ba674887dadbaf47fdf015a\"),\n   \"name\" : \"Template 1\",\n   \"description\" : \"Template 1 Desc\",\n   \"coverImageURL\" : \"https://s3.amazonaws.com/sga-app-images/lp-template/lp-template-model-1.png\",\n   \"templateURL\" : \"http://wolftradeclub.rds.land/modelo-1-app\",\n   \"active\" : true,\n   \"body\" : {\n       \"f-title\" : {\n           \"label\" : \"Título\",\n           \"value\" : \"MUDE SUA VIDA COM A WOLF TRADE!\"\n       },\n       \"f-subtitle\" : {\n           \"label\" : \"Subtítulo\",\n           \"value\" : \"A Wolf é a escolha certa para você e para todos aqueles que se encontram inconformados com a própria condição financeira; é o caminho correto para quem quer a alcançar os seus maiores sonhos de maneira simples e rápida.\"\n       },\n       \"f-contactTitle\" : {\n           \"label\" : \"Título de Contato\",\n           \"value\" : \"Fale Conosco\"\n       },\n       \"f-contactLine1\" : {\n           \"label\" : \"Contato Linha 1\",\n           \"value\" : \"Rua do Sol, 100\"\n       },\n       \"f-contactLine2\" : {\n           \"label\" : \"Contato Linha 2\",\n           \"value\" : \"Mercês - Curitiba - PR\"\n       },\n       \"f-contactLine3\" : {\n           \"label\" : \"Contato Linha 3\",\n           \"value\" : \"CEP 80.000-000\"\n       },\n       \"f-contactLine4\" : {\n           \"label\" : \"Contato Linha 4\",\n           \"value\" : \"+55 41 4321-1234\"\n       },\n       \"f-finalMessage\" : {\n           \"label\" : \"Mensagem final\",\n           \"value\" : \"Acreditamos fortemente e temos provado que é possível fazer o dinheiro trabalhar para você e que isso tem o poder de transformar verdadeiramente sua vida.\"\n       }\n   }",          "type": "json"        }      ]    },    "error": {      "fields": {        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users (with permissions) can access the data</p>"          }        ],        "Not Found 404": [          {            "group": "Not Found 404",            "optional": false,            "field": "NotFound",            "description": "<p>LpTemplate does not exist</p>"          }        ]      }    },    "filename": "src/api/routes/v1/lp-template.route.js",    "groupTitle": "LpTemplate"  },  {    "type": "get",    "url": "v1/lp-template",    "title": "List all LpTemplates",    "description": "<p>List all LpTemplate information</p>",    "version": "1.0.0",    "name": "ListLpTemplate",    "group": "LpTemplate",    "permission": [      {        "name": "admin"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "size": "1-",            "optional": true,            "field": "page",            "defaultValue": "1",            "description": "<p>List page</p>"          },          {            "group": "Parameter",            "type": "Number",            "size": "1-100",            "optional": true,            "field": "limit",            "defaultValue": "10",            "description": "<p>Results per page</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "courses",            "description": "<p>List of LpTemplate.</p>"          }        ]      }    },    "error": {      "fields": {        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users (with permissions) can access the data</p>"          }        ],        "Not Found 404": [          {            "group": "Not Found 404",            "optional": false,            "field": "NotFound",            "description": "<p>LpTemplate does not exist</p>"          }        ]      }    },    "filename": "src/api/routes/v1/lp-template.route.js",    "groupTitle": "LpTemplate"  },  {    "type": "get",    "url": "v1/lp-template/active",    "title": "List all LpTemplates active",    "description": "<p>List all LpTemplate active information</p>",    "version": "1.0.0",    "name": "ListLpTemplateActive",    "group": "LpTemplate",    "permission": [      {        "name": "admin, marketing"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "size": "1-",            "optional": true,            "field": "page",            "defaultValue": "1",            "description": "<p>List page</p>"          },          {            "group": "Parameter",            "type": "Number",            "size": "1-100",            "optional": true,            "field": "limit",            "defaultValue": "10",            "description": "<p>Results per page</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "courses",            "description": "<p>List of LpTemplate.</p>"          }        ]      }    },    "error": {      "fields": {        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users (with permissions) can access the data</p>"          }        ],        "Not Found 404": [          {            "group": "Not Found 404",            "optional": false,            "field": "NotFound",            "description": "<p>LpTemplate does not exist</p>"          }        ]      }    },    "filename": "src/api/routes/v1/lp-template.route.js",    "groupTitle": "LpTemplate"  },  {    "type": "post",    "url": "v1/material",    "title": "Create Material",    "description": "<p>Create a new Material</p>",    "version": "1.0.0",    "name": "CreateMaterial",    "group": "Material",    "permission": [      {        "name": "admin"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "size": "...50",            "optional": false,            "field": "name",            "description": "<p>Material  name</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "...200",            "optional": false,            "field": "description",            "description": "<p>Material  description</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": false,            "field": "active",            "description": "<p>Material  active</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "materialTypeId",            "description": "<p>Material  material type id</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "lessonId",            "description": "<p>Material  lesson id</p>"          }        ]      }    },    "success": {      "fields": {        "Created 201": [          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p>Material  id</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Material  name</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "description",            "description": "<p>Material  description</p>"          },          {            "group": "Created 201",            "type": "Boolean",            "optional": false,            "field": "active",            "description": "<p>Material  active</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "materialTypeId",            "description": "<p>Material  material type id</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "videoLink",            "description": "<p>Material  video link</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "fileURL",            "description": "<p>Material  file url</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "lessonId",            "description": "<p>Material  lesson id</p>"          },          {            "group": "Created 201",            "type": "Date",            "optional": false,            "field": "createdAt",            "description": "<p>Timestamp</p>"          }        ]      }    },    "error": {      "fields": {        "Bad Request 400": [          {            "group": "Bad Request 400",            "optional": false,            "field": "ValidationError",            "description": "<p>Some parameters may contain invalid values</p>"          }        ],        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users (with permissions) can create the data</p>"          }        ]      }    },    "filename": "src/api/routes/v1/material.route.js",    "groupTitle": "Material"  },  {    "type": "get",    "url": "v1/material/:id",    "title": "Delete Material",    "description": "<p>Delete Material  information</p>",    "version": "1.0.0",    "name": "DeleteMaterial",    "group": "Material",    "permission": [      {        "name": "admin"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "success": {      "fields": {        "No Content 204": [          {            "group": "No Content 204",            "optional": false,            "field": "Successfully",            "description": "<p>deleted</p>"          }        ]      }    },    "error": {      "fields": {        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users (with permissions) can delete the data</p>"          }        ],        "Not Found 404": [          {            "group": "Not Found 404",            "optional": false,            "field": "NotFound",            "description": "<p>Material does not exist</p>"          }        ]      }    },    "filename": "src/api/routes/v1/material.route.js",    "groupTitle": "Material"  },  {    "type": "get",    "url": "v1/material/:id",    "title": "Get Material",    "description": "<p>Get Material  information</p>",    "version": "1.0.0",    "name": "GetMaterial",    "group": "Material",    "permission": [      {        "name": "admin, marketing"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p>Material  id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Material  name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "description",            "description": "<p>Material  description</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "videoLink",            "description": "<p>Material  video link</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "fileURL",            "description": "<p>Material  file url</p>"          },          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "active",            "description": "<p>Material  active</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "materialTypeId",            "description": "<p>Material  material type id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "lessonId",            "description": "<p>Material  lesson id</p>"          },          {            "group": "Success 200",            "type": "Date",            "optional": false,            "field": "createdAt",            "description": "<p>Timestamp</p>"          }        ]      }    },    "error": {      "fields": {        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users (with permissions) can access the data</p>"          }        ],        "Not Found 404": [          {            "group": "Not Found 404",            "optional": false,            "field": "NotFound",            "description": "<p>Material does not exist</p>"          }        ]      }    },    "filename": "src/api/routes/v1/material.route.js",    "groupTitle": "Material"  },  {    "type": "get",    "url": "v1/material",    "title": "List all Material",    "description": "<p>List all Material  information</p>",    "version": "1.0.0",    "name": "ListMaterial",    "group": "Material",    "permission": [      {        "name": "admin, marketing"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "size": "1-",            "optional": true,            "field": "page",            "defaultValue": "1",            "description": "<p>List page</p>"          },          {            "group": "Parameter",            "type": "Number",            "size": "1-100",            "optional": true,            "field": "limit",            "defaultValue": "10",            "description": "<p>Results per page</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "materials",            "description": "<p>List of Material</p>"          }        ]      }    },    "error": {      "fields": {        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users (with permissions) can access the data</p>"          }        ],        "Not Found 404": [          {            "group": "Not Found 404",            "optional": false,            "field": "NotFound",            "description": "<p>Material does not exist</p>"          }        ]      }    },    "filename": "src/api/routes/v1/material.route.js",    "groupTitle": "Material"  },  {    "type": "post",    "url": "v1/material-type",    "title": "Create Material Type",    "description": "<p>Create a new Material Type</p>",    "version": "1.0.0",    "name": "CreateMaterialType",    "group": "MaterialType",    "permission": [      {        "name": "admin"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "size": "...50",            "optional": false,            "field": "name",            "description": "<p>Material Type name</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "...200",            "optional": false,            "field": "description",            "description": "<p>Material Type description</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": false,            "field": "active",            "description": "<p>Material Type active</p>"          }        ]      }    },    "success": {      "fields": {        "Created 201": [          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p>Material Type id</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Material Type name</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "description",            "description": "<p>Material Type description</p>"          },          {            "group": "Created 201",            "type": "Boolean",            "optional": false,            "field": "active",            "description": "<p>Material Type active</p>"          },          {            "group": "Created 201",            "type": "Date",            "optional": false,            "field": "createdAt",            "description": "<p>Timestamp</p>"          }        ]      }    },    "error": {      "fields": {        "Bad Request 400": [          {            "group": "Bad Request 400",            "optional": false,            "field": "ValidationError",            "description": "<p>Some parameters may contain invalid values</p>"          }        ],        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users (with permissions) can create the data</p>"          }        ]      }    },    "filename": "src/api/routes/v1/material-type.route.js",    "groupTitle": "MaterialType"  },  {    "type": "get",    "url": "v1/material-type/:id",    "title": "Delete MaterialType",    "description": "<p>Delete Material Type information</p>",    "version": "1.0.0",    "name": "DeleteMaterialType",    "group": "MaterialType",    "permission": [      {        "name": "admin"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "success": {      "fields": {        "No Content 204": [          {            "group": "No Content 204",            "optional": false,            "field": "Successfully",            "description": "<p>deleted</p>"          }        ]      }    },    "error": {      "fields": {        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users (with permissions) can delete the data</p>"          }        ],        "Not Found 404": [          {            "group": "Not Found 404",            "optional": false,            "field": "NotFound",            "description": "<p>MaterialType does not exist</p>"          }        ]      }    },    "filename": "src/api/routes/v1/material-type.route.js",    "groupTitle": "MaterialType"  },  {    "type": "get",    "url": "v1/material-type/:id",    "title": "Get MaterialType",    "description": "<p>Get Material Type information</p>",    "version": "1.0.0",    "name": "GetMaterialType",    "group": "MaterialType",    "permission": [      {        "name": "admin, marketing"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p>Material Type id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Material Type name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "description",            "description": "<p>Material Type description</p>"          },          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "active",            "description": "<p>Material Type active</p>"          },          {            "group": "Success 200",            "type": "Date",            "optional": false,            "field": "createdAt",            "description": "<p>Timestamp</p>"          }        ]      }    },    "error": {      "fields": {        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users (with permissions) can access the data</p>"          }        ],        "Not Found 404": [          {            "group": "Not Found 404",            "optional": false,            "field": "NotFound",            "description": "<p>MaterialType does not exist</p>"          }        ]      }    },    "filename": "src/api/routes/v1/material-type.route.js",    "groupTitle": "MaterialType"  },  {    "type": "get",    "url": "v1/material-type",    "title": "List all MaterialType",    "description": "<p>List all Material Type information</p>",    "version": "1.0.0",    "name": "ListMaterialType",    "group": "MaterialType",    "permission": [      {        "name": "admin, marketing"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "size": "1-",            "optional": true,            "field": "page",            "defaultValue": "1",            "description": "<p>List page</p>"          },          {            "group": "Parameter",            "type": "Number",            "size": "1-100",            "optional": true,            "field": "limit",            "defaultValue": "10",            "description": "<p>Results per page</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "materialTypes",            "description": "<p>List of Material Type</p>"          }        ]      }    },    "error": {      "fields": {        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users (with permissions) can access the data</p>"          }        ],        "Not Found 404": [          {            "group": "Not Found 404",            "optional": false,            "field": "NotFound",            "description": "<p>MaterialType does not exist</p>"          }        ]      }    },    "filename": "src/api/routes/v1/material-type.route.js",    "groupTitle": "MaterialType"  },  {    "type": "put",    "url": "v1/material-type",    "title": "Update Material Type",    "description": "<p>Update a Material Type</p>",    "version": "1.0.0",    "name": "UpdateMaterialType",    "group": "MaterialType",    "permission": [      {        "name": "admin"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p>Material Type id</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "...50",            "optional": false,            "field": "name",            "description": "<p>Material Type name</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "...200",            "optional": false,            "field": "description",            "description": "<p>Material Type description</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": false,            "field": "active",            "description": "<p>Material Type active</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p>Material Type id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Material Type name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "description",            "description": "<p>Material Type description</p>"          },          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "active",            "description": "<p>Material Type active</p>"          },          {            "group": "Success 200",            "type": "Date",            "optional": false,            "field": "createdAt",            "description": "<p>Timestamp</p>"          }        ]      }    },    "error": {      "fields": {        "Bad Request 400": [          {            "group": "Bad Request 400",            "optional": false,            "field": "ValidationError",            "description": "<p>Some parameters may contain invalid values</p>"          }        ],        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users (with permissions) can modify the data</p>"          }        ],        "Not Found 404": [          {            "group": "Not Found 404",            "optional": false,            "field": "NotFound",            "description": "<p>MaterialType does not exist</p>"          }        ]      }    },    "filename": "src/api/routes/v1/material-type.route.js",    "groupTitle": "MaterialType"  },  {    "type": "put",    "url": "v1/material",    "title": "Update Material",    "description": "<p>Update a Material</p>",    "version": "1.0.0",    "name": "UpdateMaterial",    "group": "Material",    "permission": [      {        "name": "admin"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p>Material  id</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "...50",            "optional": false,            "field": "name",            "description": "<p>Material  name</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "...200",            "optional": false,            "field": "description",            "description": "<p>Material  description</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": false,            "field": "active",            "description": "<p>Material  active</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "materialTypeId",            "description": "<p>Material  material type id</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "lessonId",            "description": "<p>Material  lesson id</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p>Material  id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Material  name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "description",            "description": "<p>Material  description</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "videoLink",            "description": "<p>Material  video link</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "fileURL",            "description": "<p>Material  file url</p>"          },          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "active",            "description": "<p>Material  active</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "materialTypeId",            "description": "<p>Material  material type id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "lessonId",            "description": "<p>Material  lesson id</p>"          },          {            "group": "Success 200",            "type": "Date",            "optional": false,            "field": "createdAt",            "description": "<p>Timestamp</p>"          }        ]      }    },    "error": {      "fields": {        "Bad Request 400": [          {            "group": "Bad Request 400",            "optional": false,            "field": "ValidationError",            "description": "<p>Some parameters may contain invalid values</p>"          }        ],        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users (with permissions) can modify the data</p>"          }        ],        "Not Found 404": [          {            "group": "Not Found 404",            "optional": false,            "field": "NotFound",            "description": "<p>Material does not exist</p>"          }        ]      }    },    "filename": "src/api/routes/v1/material.route.js",    "groupTitle": "Material"  },  {    "type": "post",    "url": "v1/newsletter",    "title": "Create Newsletter",    "description": "<p>Create a new Newsletter</p>",    "version": "1.0.0",    "name": "CreateNewsletter",    "group": "Newsletter",    "permission": [      {        "name": "admin, marketing"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "size": "...50",            "optional": false,            "field": "name",            "description": "<p>Newsletter name</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "...200",            "optional": false,            "field": "subject",            "description": "<p>Newsletter subject</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "...50",            "optional": false,            "field": "senderName",            "description": "<p>Newsletter senderName</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "content",            "description": "<p>Newsletter content</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": false,            "field": "scheduled",            "description": "<p>Newsletter scheduled</p>"          },          {            "group": "Parameter",            "type": "Date",            "optional": false,            "field": "deliveryDate",            "description": "<p>Newsletter delivery date</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "deliveryHour",            "description": "<p>Newsletter delivery hour</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": false,            "field": "active",            "description": "<p>Newsletter active</p>"          },          {            "group": "Parameter",            "type": "Array",            "optional": false,            "field": "groupIds",            "description": "<p>Newsletter recipient ids</p>"          }        ]      }    },    "success": {      "fields": {        "Created 201": [          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p>Newsletter id</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Newsletter name</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "subject",            "description": "<p>Newsletter subject</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "senderName",            "description": "<p>Newsletter senderName</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "content",            "description": "<p>Newsletter content</p>"          },          {            "group": "Created 201",            "type": "Boolean",            "optional": false,            "field": "scheduled",            "description": "<p>Newsletter scheduled</p>"          },          {            "group": "Created 201",            "type": "Date",            "optional": false,            "field": "deliveryDate",            "description": "<p>Newsletter delivery date</p>"          },          {            "group": "Created 201",            "type": "Number",            "optional": false,            "field": "deliveryHour",            "description": "<p>Newsletter delivery hour</p>"          },          {            "group": "Created 201",            "type": "Boolean",            "optional": false,            "field": "active",            "description": "<p>Newsletter active</p>"          },          {            "group": "Created 201",            "type": "Array",            "optional": false,            "field": "groupIds",            "description": "<p>Newsletter recipient ids</p>"          },          {            "group": "Created 201",            "type": "Boolean",            "optional": false,            "field": "sent",            "description": "<p>Newsletter sent</p>"          },          {            "group": "Created 201",            "type": "Date",            "optional": false,            "field": "createdAt",            "description": "<p>Timestamp</p>"          }        ]      }    },    "error": {      "fields": {        "Bad Request 400": [          {            "group": "Bad Request 400",            "optional": false,            "field": "ValidationError",            "description": "<p>Some parameters may contain invalid values</p>"          }        ],        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users (with permissions) can create the data</p>"          }        ]      }    },    "filename": "src/api/routes/v1/newsletter.route.js",    "groupTitle": "Newsletter"  },  {    "type": "get",    "url": "v1/newsletter/:id",    "title": "Delete Newsletter",    "description": "<p>Delete Newsletter information</p>",    "version": "1.0.0",    "name": "DeleteNewsletter",    "group": "Newsletter",    "permission": [      {        "name": "admin, marketing"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "success": {      "fields": {        "No Content 204": [          {            "group": "No Content 204",            "optional": false,            "field": "Successfully",            "description": "<p>deleted</p>"          }        ]      }    },    "error": {      "fields": {        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users (with permissions) can delete the data</p>"          }        ],        "Forbidden 403": [          {            "group": "Forbidden 403",            "optional": false,            "field": "Forbidden",            "description": "<p>Only user with same id can access the data</p>"          }        ],        "Not Found 404": [          {            "group": "Not Found 404",            "optional": false,            "field": "NotFound",            "description": "<p>Newsletter does not exist</p>"          }        ]      }    },    "filename": "src/api/routes/v1/newsletter.route.js",    "groupTitle": "Newsletter"  },  {    "type": "get",    "url": "v1/newsletter/:id",    "title": "Get Newsletter",    "description": "<p>Get Newsletter information</p>",    "version": "1.0.0",    "name": "GetNewsletter",    "group": "Newsletter",    "permission": [      {        "name": "admin, marketing"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p>Newsletter id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Newsletter name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "subject",            "description": "<p>Newsletter subject</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "senderName",            "description": "<p>Newsletter senderName</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "content",            "description": "<p>Newsletter content</p>"          },          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "scheduled",            "description": "<p>Newsletter scheduled</p>"          },          {            "group": "Success 200",            "type": "Date",            "optional": false,            "field": "deliveryDate",            "description": "<p>Newsletter delivery date</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "deliveryHour",            "description": "<p>Newsletter delivery hour</p>"          },          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "active",            "description": "<p>Newsletter active</p>"          },          {            "group": "Success 200",            "type": "Array",            "optional": false,            "field": "groupIds",            "description": "<p>Newsletter recipient ids</p>"          },          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "sent",            "description": "<p>Newsletter sent</p>"          },          {            "group": "Success 200",            "type": "Date",            "optional": false,            "field": "createdAt",            "description": "<p>Timestamp</p>"          }        ]      }    },    "error": {      "fields": {        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users (with permissions) can access the data</p>"          }        ],        "Forbidden 403": [          {            "group": "Forbidden 403",            "optional": false,            "field": "Forbidden",            "description": "<p>Only user with same id can access the data</p>"          }        ],        "Not Found 404": [          {            "group": "Not Found 404",            "optional": false,            "field": "NotFound",            "description": "<p>Newsletter does not exist</p>"          }        ]      }    },    "filename": "src/api/routes/v1/newsletter.route.js",    "groupTitle": "Newsletter"  },  {    "type": "get",    "url": "v1/newsletter",    "title": "List all Newsletter",    "description": "<p>List all newsletter  information</p>",    "version": "1.0.0",    "name": "ListNewsletter",    "group": "Newsletter",    "permission": [      {        "name": "admin, marketing"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "size": "1-",            "optional": true,            "field": "page",            "defaultValue": "1",            "description": "<p>List page</p>"          },          {            "group": "Parameter",            "type": "Number",            "size": "1-100",            "optional": true,            "field": "limit",            "defaultValue": "10",            "description": "<p>Results per page</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "newsletters",            "description": "<p>List of Newsletter</p>"          }        ]      }    },    "error": {      "fields": {        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users (with permissions) can access the data</p>"          }        ],        "Not Found 404": [          {            "group": "Not Found 404",            "optional": false,            "field": "NotFound",            "description": "<p>Newsletter does not exist</p>"          }        ]      }    },    "filename": "src/api/routes/v1/newsletter.route.js",    "groupTitle": "Newsletter"  },  {    "type": "put",    "url": "v1/newsletter",    "title": "Update Newsletter",    "description": "<p>Update a Newsletter</p>",    "version": "1.0.0",    "name": "UpdateNewsletter",    "group": "Newsletter",    "permission": [      {        "name": "admin, marketing"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p>Newsletter id</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "...50",            "optional": false,            "field": "name",            "description": "<p>Newsletter name</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "...200",            "optional": false,            "field": "subject",            "description": "<p>Newsletter subject</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "...50",            "optional": false,            "field": "senderName",            "description": "<p>Newsletter senderName</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "content",            "description": "<p>Newsletter content</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": false,            "field": "scheduled",            "description": "<p>Newsletter scheduled</p>"          },          {            "group": "Parameter",            "type": "Date",            "optional": false,            "field": "deliveryDate",            "description": "<p>Newsletter delivery date</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "deliveryHour",            "description": "<p>Newsletter delivery hour</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": false,            "field": "active",            "description": "<p>Newsletter active</p>"          },          {            "group": "Parameter",            "type": "Array",            "optional": false,            "field": "groupIds",            "description": "<p>Newsletter recipient ids</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p>Newsletter id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Newsletter name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "subject",            "description": "<p>Newsletter subject</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "senderName",            "description": "<p>Newsletter senderName</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "content",            "description": "<p>Newsletter content</p>"          },          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "scheduled",            "description": "<p>Newsletter scheduled</p>"          },          {            "group": "Success 200",            "type": "Date",            "optional": false,            "field": "deliveryDate",            "description": "<p>Newsletter delivery date</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "deliveryHour",            "description": "<p>Newsletter delivery hour</p>"          },          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "active",            "description": "<p>Newsletter active</p>"          },          {            "group": "Success 200",            "type": "Array",            "optional": false,            "field": "groupIds",            "description": "<p>Newsletter recipient ids</p>"          },          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "sent",            "description": "<p>Newsletter sent</p>"          },          {            "group": "Success 200",            "type": "Date",            "optional": false,            "field": "createdAt",            "description": "<p>Timestamp *</p>"          }        ]      }    },    "error": {      "fields": {        "Bad Request 400": [          {            "group": "Bad Request 400",            "optional": false,            "field": "ValidationError",            "description": "<p>Some parameters may contain invalid values</p>"          }        ],        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users (with permissions) can modify the data</p>"          }        ],        "Forbidden 403": [          {            "group": "Forbidden 403",            "optional": false,            "field": "Forbidden",            "description": "<p>Only user with same id can access the data</p>"          }        ],        "Not Found 404": [          {            "group": "Not Found 404",            "optional": false,            "field": "NotFound",            "description": "<p>Newsletter does not exist</p>"          }        ]      }    },    "filename": "src/api/routes/v1/newsletter.route.js",    "groupTitle": "Newsletter"  },  {    "type": "post",    "url": "v1/notification",    "title": "Create Notification",    "description": "<p>Create a new notification</p>",    "version": "1.0.0",    "name": "CreateNnotification",    "group": "Notification",    "permission": [      {        "name": "admin"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "size": "...50",            "optional": false,            "field": "name",            "description": "<p>Notification title</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "...300",            "optional": false,            "field": "comments",            "description": "<p>Notification comments</p>"          },          {            "group": "Parameter",            "type": "String[]",            "optional": false,            "field": "groupIds",            "description": "<p>Notification group ids</p>"          }        ]      }    },    "success": {      "fields": {        "Created 201": [          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p>Notification id</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Notification title</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "comments",            "description": "<p>Notification comments</p>"          },          {            "group": "Created 201",            "type": "String[]",            "optional": false,            "field": "groupId",            "description": "<p>Notification group ids</p>"          },          {            "group": "Created 201",            "type": "Date",            "optional": false,            "field": "createdAt",            "description": "<p>Timestamp</p>"          }        ]      }    },    "error": {      "fields": {        "Bad Request 400": [          {            "group": "Bad Request 400",            "optional": false,            "field": "ValidationError",            "description": "<p>Some parameters may contain invalid values</p>"          }        ],        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users (with permissions) can create the data</p>"          }        ]      }    },    "filename": "src/api/routes/v1/notification.route.js",    "groupTitle": "Notification"  },  {    "type": "get",    "url": "v1/notification/:id",    "title": "Delete notification",    "description": "<p>Delete notification information</p>",    "version": "1.0.0",    "name": "DeleteNotification",    "group": "Notification",    "permission": [      {        "name": "admin"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "success": {      "fields": {        "No Content 204": [          {            "group": "No Content 204",            "optional": false,            "field": "Successfully",            "description": "<p>deleted</p>"          }        ]      }    },    "error": {      "fields": {        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users (with permissions) can delete the data</p>"          }        ],        "Not Found 404": [          {            "group": "Not Found 404",            "optional": false,            "field": "NotFound",            "description": "<p>Notification does not exist</p>"          }        ]      }    },    "filename": "src/api/routes/v1/notification.route.js",    "groupTitle": "Notification"  },  {    "type": "get",    "url": "v1/notification/:id",    "title": "Get Notification",    "description": "<p>Get notification information</p>",    "version": "1.0.0",    "name": "GetNotification",    "group": "Notification",    "permission": [      {        "name": "admin"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Notification title</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "comments",            "description": "<p>Notification comments</p>"          },          {            "group": "Parameter",            "type": "String[]",            "optional": false,            "field": "groupIds",            "description": "<p>Notification group ids</p>"          }        ]      }    },    "error": {      "fields": {        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users (with permissions) can access the data</p>"          }        ],        "Not Found 404": [          {            "group": "Not Found 404",            "optional": false,            "field": "NotFound",            "description": "<p>Notification does not exist</p>"          }        ]      }    },    "filename": "src/api/routes/v1/notification.route.js",    "groupTitle": "Notification"  },  {    "type": "get",    "url": "v1/notification",    "title": "List all notifications",    "description": "<p>List all notification information</p>",    "version": "1.0.0",    "name": "ListNotification",    "group": "Notification",    "permission": [      {        "name": "admin"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "size": "1-",            "optional": true,            "field": "page",            "defaultValue": "1",            "description": "<p>List page</p>"          },          {            "group": "Parameter",            "type": "Number",            "size": "1-100",            "optional": true,            "field": "limit",            "defaultValue": "10",            "description": "<p>Results per page</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "notifications",            "description": "<p>List of Notification</p>"          }        ]      }    },    "error": {      "fields": {        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users (with permissions) can access the data</p>"          }        ],        "Not Found 404": [          {            "group": "Not Found 404",            "optional": false,            "field": "NotFound",            "description": "<p>Notification does not exist</p>"          }        ]      }    },    "filename": "src/api/routes/v1/notification.route.js",    "groupTitle": "Notification"  },  {    "type": "get",    "url": "v1/sponsor/:id",    "title": "Get sponsor by id",    "description": "<p>Get sponsor by id</p>",    "version": "1.0.0",    "name": "GetSponsorById",    "group": "Sponsor",    "permission": [      {        "name": "user"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>Sponsor id</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Sponsor name</p>"          }        ]      }    },    "error": {      "fields": {        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users (with permissions) can access the data</p>"          }        ],        "Not Found 404": [          {            "group": "Not Found 404",            "optional": false,            "field": "NotFound",            "description": "<p>Sponsor does not exist</p>"          }        ]      }    },    "filename": "src/api/routes/v1/sponsor.route.js",    "groupTitle": "Sponsor"  },  {    "type": "post",    "url": "v1/support-material",    "title": "Create SupportMaterial",    "description": "<p>Create a new SupportMaterial</p>",    "version": "1.0.0",    "name": "CreateSupportMaterial",    "group": "SupportMaterial",    "permission": [      {        "name": "admin"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "size": "...50",            "optional": false,            "field": "name",            "description": "<p>SupportMaterial  name</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "...200",            "optional": false,            "field": "description",            "description": "<p>SupportMaterial  description</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": false,            "field": "active",            "description": "<p>SupportMaterial  active</p>"          }        ]      }    },    "success": {      "fields": {        "Created 201": [          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p>SupportMaterial  id</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>SupportMaterial  name</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "description",            "description": "<p>SupportMaterial  description</p>"          },          {            "group": "Created 201",            "type": "Boolean",            "optional": false,            "field": "active",            "description": "<p>SupportMaterial  active</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "fileURL",            "description": "<p>SupportMaterial  file url</p>"          },          {            "group": "Created 201",            "type": "Date",            "optional": false,            "field": "createdAt",            "description": "<p>Timestamp</p>"          }        ]      }    },    "error": {      "fields": {        "Bad Request 400": [          {            "group": "Bad Request 400",            "optional": false,            "field": "ValidationError",            "description": "<p>Some parameters may contain invalid values</p>"          }        ],        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users (with permissions) can create the data</p>"          }        ]      }    },    "filename": "src/api/routes/v1/support-material.route.js",    "groupTitle": "SupportMaterial"  },  {    "type": "get",    "url": "v1/support-material/:id",    "title": "Delete SupportMaterial",    "description": "<p>Delete SupportMaterial  information</p>",    "version": "1.0.0",    "name": "DeleteSupportMaterial",    "group": "SupportMaterial",    "permission": [      {        "name": "admin"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "success": {      "fields": {        "No Content 204": [          {            "group": "No Content 204",            "optional": false,            "field": "Successfully",            "description": "<p>deleted</p>"          }        ]      }    },    "error": {      "fields": {        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users (with permissions) can delete the data</p>"          }        ],        "Not Found 404": [          {            "group": "Not Found 404",            "optional": false,            "field": "NotFound",            "description": "<p>SupportMaterial does not exist</p>"          }        ]      }    },    "filename": "src/api/routes/v1/support-material.route.js",    "groupTitle": "SupportMaterial"  },  {    "type": "get",    "url": "v1/support-material/:id",    "title": "Get SupportMaterial",    "description": "<p>Get SupportMaterial information</p>",    "version": "1.0.0",    "name": "GetSupportMaterial",    "group": "SupportMaterial",    "permission": [      {        "name": "user"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p>SupportMaterial  id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>SupportMaterial  name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "description",            "description": "<p>SupportMaterial  description</p>"          },          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "active",            "description": "<p>SupportMaterial  active</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "fileURL",            "description": "<p>SupportMaterial  file url</p>"          },          {            "group": "Success 200",            "type": "Date",            "optional": false,            "field": "createdAt",            "description": "<p>Timestamp</p>"          }        ]      }    },    "error": {      "fields": {        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users (with permissions) can access the data</p>"          }        ],        "Not Found 404": [          {            "group": "Not Found 404",            "optional": false,            "field": "NotFound",            "description": "<p>SupportMaterial does not exist</p>"          }        ]      }    },    "filename": "src/api/routes/v1/support-material.route.js",    "groupTitle": "SupportMaterial"  },  {    "type": "get",    "url": "v1/support-material",    "title": "List all SupportMaterial",    "description": "<p>List all SupportMaterial  information</p>",    "version": "1.0.0",    "name": "ListSupportMaterial",    "group": "SupportMaterial",    "permission": [      {        "name": "user"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "materials",            "description": "<p>List of Support Material.</p>"          }        ]      }    },    "error": {      "fields": {        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users (with permissions) can access the data</p>"          }        ],        "Not Found 404": [          {            "group": "Not Found 404",            "optional": false,            "field": "NotFound",            "description": "<p>SupportMaterial does not exist</p>"          }        ]      }    },    "filename": "src/api/routes/v1/support-material.route.js",    "groupTitle": "SupportMaterial"  },  {    "type": "get",    "url": "v1/support-material/active",    "title": "List all SupportMaterial active",    "description": "<p>List all SupportMaterial active  information</p>",    "version": "1.0.0",    "name": "ListSupportMaterialActive",    "group": "SupportMaterial",    "permission": [      {        "name": "user"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "materials",            "description": "<p>List of Support Material.</p>"          }        ]      }    },    "error": {      "fields": {        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users (with permissions) can access the data</p>"          }        ],        "Not Found 404": [          {            "group": "Not Found 404",            "optional": false,            "field": "NotFound",            "description": "<p>SupportMaterial does not exist</p>"          }        ]      }    },    "filename": "src/api/routes/v1/support-material.route.js",    "groupTitle": "SupportMaterial"  },  {    "type": "put",    "url": "v1/support-material",    "title": "Update SupportMaterial",    "description": "<p>Update a SupportMaterial</p>",    "version": "1.0.0",    "name": "UpdateSupportMaterial",    "group": "SupportMaterial",    "permission": [      {        "name": "admin"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p>SupportMaterial  id</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "...50",            "optional": false,            "field": "name",            "description": "<p>SupportMaterial  name</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "...200",            "optional": false,            "field": "description",            "description": "<p>SupportMaterial  description</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": false,            "field": "active",            "description": "<p>SupportMaterial  active</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p>SupportMaterial  id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>SupportMaterial  name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "description",            "description": "<p>SupportMaterial  description</p>"          },          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "active",            "description": "<p>SupportMaterial  active</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "fileURL",            "description": "<p>SupportMaterial  file url</p>"          },          {            "group": "Success 200",            "type": "Date",            "optional": false,            "field": "createdAt",            "description": "<p>Timestamp</p>"          }        ]      }    },    "error": {      "fields": {        "Bad Request 400": [          {            "group": "Bad Request 400",            "optional": false,            "field": "ValidationError",            "description": "<p>Some parameters may contain invalid values</p>"          }        ],        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users (with permissions) can modify the data</p>"          }        ],        "Not Found 404": [          {            "group": "Not Found 404",            "optional": false,            "field": "NotFound",            "description": "<p>SupportMaterial does not exist</p>"          }        ]      }    },    "filename": "src/api/routes/v1/support-material.route.js",    "groupTitle": "SupportMaterial"  },  {    "type": "get",    "url": "v1/upload",    "title": "File upload",    "description": "<p>Upload a file and get the file url</p>",    "version": "1.0.0",    "name": "FileUpload",    "group": "Upload",    "permission": [      {        "name": "user"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "File",            "optional": false,            "field": "file",            "description": "<p>File to upload. The name of parameter must be &quot;file&quot;</p>"          }        ]      }    },    "success": {      "fields": {        "Created 201": [          {            "group": "Created 201",            "type": "Boolean",            "optional": false,            "field": "error",            "description": "<p>If something went wrong</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "url",            "description": "<p>File URL</p>"          }        ]      }    },    "error": {      "fields": {        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users (with permissions) can access the data</p>"          }        ]      }    },    "filename": "src/api/routes/v1/upload.route.js",    "groupTitle": "Upload"  },  {    "type": "get",    "url": "v1/user-course/course/:id/lesson/:lessonId/complete",    "title": "Complete a lesson of a Course",    "description": "<p>Complete a lesson of a Course</p>",    "version": "1.0.0",    "name": "CompleteLesson",    "group": "UserCourse",    "permission": [      {        "name": "user"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "courseId",            "description": "<p>Course id</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "lessonId",            "description": "<p>Lesson id to complete</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "{\n    \"_id\": \"5b9d54756a32466142f5b96d\",\n    \"createdAt\": \"2018-09-15T18:50:29.313Z\",\n    \"courseId\": \"5b8dcf821d3f915e29004960\",   \n    \"finished\": false,\n    \"canDoExam\": false,\n    \"status\": \"in_progress\",\n    \"completedLessons\": [\n      {\n        \"lessonId\": \"5b8dd6189d8e5d6e1bf554bf\",\n        \"_id\": \"5ba0024ac4a3497454eb3ccb\"\n      }\n    ],\n    \"questions\": [\n        {\n            \"question\": \"Quem descobriu o Brasil?\",\n            \"_id\": \"0d98e37d-b917-11e8-8dae-e93ee8b196bb\",\n            \"answers\": [\n                {\n                    \"answer\": \"Cristovao Colombo\",\n                    \"_id\": \"0d990a81-b917-11e8-8dae-e93ee8b196bb\",\n                },\n                {\n                    \"answer\": \"Pedro Alvares Cabral\",\n                    \"_id\": \"0d990a80-b917-11e8-8dae-e93ee8b196bb\",\n                },\n                {\n                    \"answer\": \"Nelson Ned\",\n                    \"_id\": \"0d98e37e-b917-11e8-8dae-e93ee8b196bb\",\n                }\n            ]\n        }\n    ],\n    \"hasQuestions\": true\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users (with permissions) can access the data</p>"          }        ],        "Not Found 403": [          {            "group": "Not Found 403",            "optional": false,            "field": "Forbidden",            "description": "<p>Lesson is already completed</p>"          }        ],        "Not Found 404": [          {            "group": "Not Found 404",            "optional": false,            "field": "NotFound",            "description": "<p>Not Found</p>"          }        ]      }    },    "filename": "src/api/routes/v1/user-course.route.js",    "groupTitle": "UserCourse"  },  {    "type": "get",    "url": "v1/user-course/course/:courseId/exam/:examId/finish",    "title": "Finish a Course",    "description": "<p>Finish a Course</p>",    "version": "1.0.0",    "name": "FinishCourse",    "group": "UserCourse",    "permission": [      {        "name": "user"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "courseId",            "description": "<p>Course id</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "lessonId",            "description": "<p>Exam id to finish</p>"          }        ]      },      "examples": [        {          "title": "Request-Example:",          "content": "{\n    \"questions\": [\n        {\n            \"question\": \"Quem descobriu o Brasil?\",\n            \"_id\": \"0d98e37d-b917-11e8-8dae-e93ee8b196bb\",\n            \"answers\": [\n                {\n                    \"answer\": \"Cristovao Colombo\",\n                    \"_id\": \"0d990a81-b917-11e8-8dae-e93ee8b196bb\",\n                    \"correct\": false\n                },\n                {\n                    \"answer\": \"Pedro Alvares Cabral\",\n                    \"_id\": \"0d990a80-b917-11e8-8dae-e93ee8b196bb\",\n                    \"correct\": true\n                },\n                {\n                    \"answer\": \"Nelson Ned\",\n                    \"_id\": \"0d98e37e-b917-11e8-8dae-e93ee8b196bb\",\n                    \"correct\": false\n                }\n            ]\n        }\n    ]\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users (with permissions) can access the data</p>"          }        ],        "Not Found 403": [          {            "group": "Not Found 403",            "optional": false,            "field": "Forbidden",            "description": "<p>UserCourse is already finished</p>"          }        ],        "Not Found 404": [          {            "group": "Not Found 404",            "optional": false,            "field": "NotFound",            "description": "<p>Not Found</p>"          }        ]      }    },    "filename": "src/api/routes/v1/user-course.route.js",    "groupTitle": "UserCourse"  },  {    "type": "get",    "url": "v1/user-course/course/:id/start",    "title": "Start course",    "description": "<p>Start course</p>",    "version": "1.0.0",    "name": "StartUserCourse",    "group": "UserCourse",    "permission": [      {        "name": "user"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>Course id to start</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "{\n    \"_id\": \"5b9d54756a32466142f5b96d\",\n    \"createdAt\": \"2018-09-15T18:50:29.313Z\",\n    \"courseId\": \"5b8dcf821d3f915e29004960\",   \n    \"finished\": false,\n    \"canDoExam\": false,\n    \"status\": \"in_progress\",\n    \"completedLessons\": [],\n    \"questions\": [\n        {\n            \"question\": \"Quem descobriu o Brasil?\",\n            \"_id\": \"0d98e37d-b917-11e8-8dae-e93ee8b196bb\",\n            \"answers\": [\n                {\n                    \"answer\": \"Cristovao Colombo\",\n                    \"_id\": \"0d990a81-b917-11e8-8dae-e93ee8b196bb\",\n                },\n                {\n                    \"answer\": \"Pedro Alvares Cabral\",\n                    \"_id\": \"0d990a80-b917-11e8-8dae-e93ee8b196bb\",\n                },\n                {\n                    \"answer\": \"Nelson Ned\",\n                    \"_id\": \"0d98e37e-b917-11e8-8dae-e93ee8b196bb\",\n                }\n            ]\n        }\n    ],\n    \"hasQuestions\": true\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users (with permissions) can access the data</p>"          }        ],        "Not Found 403": [          {            "group": "Not Found 403",            "optional": false,            "field": "Forbidden",            "description": "<p>Course is already in progress</p>"          }        ],        "Not Found 404": [          {            "group": "Not Found 404",            "optional": false,            "field": "NotFound",            "description": "<p>Course does not exist</p>"          }        ]      }    },    "filename": "src/api/routes/v1/user-course.route.js",    "groupTitle": "UserCourse"  },  {    "type": "post",    "url": "v1/users",    "title": "Create User",    "description": "<p>Create a new user</p>",    "version": "1.0.0",    "name": "CreateUser",    "group": "User",    "permission": [      {        "name": "admin"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>User's email</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "6..128",            "optional": false,            "field": "password",            "description": "<p>User's password</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "..128",            "optional": true,            "field": "name",            "description": "<p>User's name</p>"          },          {            "group": "Parameter",            "type": "String",            "allowedValues": [              "user",              "admin"            ],            "optional": true,            "field": "role",            "description": "<p>User's role</p>"          }        ]      }    },    "success": {      "fields": {        "Created 201": [          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>User's id</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>User's name</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>User's email</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "role",            "description": "<p>User's role</p>"          },          {            "group": "Created 201",            "type": "Date",            "optional": false,            "field": "createdAt",            "description": "<p>Timestamp</p>"          }        ]      }    },    "error": {      "fields": {        "Bad Request 400": [          {            "group": "Bad Request 400",            "optional": false,            "field": "ValidationError",            "description": "<p>Some parameters may contain invalid values</p>"          }        ],        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users can create the data</p>"          }        ],        "Forbidden 403": [          {            "group": "Forbidden 403",            "optional": false,            "field": "Forbidden",            "description": "<p>Only admins can create the data</p>"          }        ]      }    },    "filename": "src/api/routes/v1/user.route.js",    "groupTitle": "User"  },  {    "type": "patch",    "url": "v1/users/:id",    "title": "Delete User",    "description": "<p>Delete a user</p>",    "version": "1.0.0",    "name": "DeleteUser",    "group": "User",    "permission": [      {        "name": "user"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "success": {      "fields": {        "No Content 204": [          {            "group": "No Content 204",            "optional": false,            "field": "Successfully",            "description": "<p>deleted</p>"          }        ]      }    },    "error": {      "fields": {        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users can delete the data</p>"          }        ],        "Forbidden 403": [          {            "group": "Forbidden 403",            "optional": false,            "field": "Forbidden",            "description": "<p>Only user with same id or admins can delete the data</p>"          }        ],        "Not Found 404": [          {            "group": "Not Found 404",            "optional": false,            "field": "NotFound",            "description": "<p>User does not exist</p>"          }        ]      }    },    "filename": "src/api/routes/v1/user.route.js",    "groupTitle": "User"  },  {    "type": "get",    "url": "v1/users/:id",    "title": "Get User",    "description": "<p>Get user information</p>",    "version": "1.0.0",    "name": "GetUser",    "group": "User",    "permission": [      {        "name": "user"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>User's id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>User's name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>User's email</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "role",            "description": "<p>User's role</p>"          },          {            "group": "Success 200",            "type": "Date",            "optional": false,            "field": "createdAt",            "description": "<p>Timestamp</p>"          }        ]      }    },    "error": {      "fields": {        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users can access the data</p>"          }        ],        "Forbidden 403": [          {            "group": "Forbidden 403",            "optional": false,            "field": "Forbidden",            "description": "<p>Only user with same id or admins can access the data</p>"          }        ],        "Not Found 404": [          {            "group": "Not Found 404",            "optional": false,            "field": "NotFound",            "description": "<p>User does not exist</p>"          }        ]      }    },    "filename": "src/api/routes/v1/user.route.js",    "groupTitle": "User"  },  {    "type": "get",    "url": "v1/users",    "title": "List Users",    "description": "<p>Get a list of users</p>",    "version": "1.0.0",    "name": "ListUsers",    "group": "User",    "permission": [      {        "name": "admin"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "size": "1-",            "optional": true,            "field": "page",            "defaultValue": "1",            "description": "<p>List page</p>"          },          {            "group": "Parameter",            "type": "Number",            "size": "1-100",            "optional": true,            "field": "perPage",            "defaultValue": "1",            "description": "<p>Users per page</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "name",            "description": "<p>User's name</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "email",            "description": "<p>User's email</p>"          },          {            "group": "Parameter",            "type": "String",            "allowedValues": [              "user",              "admin"            ],            "optional": true,            "field": "role",            "description": "<p>User's role</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "users",            "description": "<p>List of users.</p>"          }        ]      }    },    "error": {      "fields": {        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users can access the data</p>"          }        ],        "Forbidden 403": [          {            "group": "Forbidden 403",            "optional": false,            "field": "Forbidden",            "description": "<p>Only admins can access the data</p>"          }        ]      }    },    "filename": "src/api/routes/v1/user.route.js",    "groupTitle": "User"  },  {    "type": "get",    "url": "v1/user-notification/:id",    "title": "Delete user notification",    "description": "<p>Delete user notification information</p>",    "version": "1.0.0",    "name": "DeleteNotification",    "group": "UserNotification",    "permission": [      {        "name": "user"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "success": {      "fields": {        "No Content 204": [          {            "group": "No Content 204",            "optional": false,            "field": "Successfully",            "description": "<p>deleted</p>"          }        ]      }    },    "error": {      "fields": {        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users (with permissions) can delete the data</p>"          }        ],        "Forbidden 403": [          {            "group": "Forbidden 403",            "optional": false,            "field": "Forbidden",            "description": "<p>Only user with same id can access the data</p>"          }        ],        "Not Found 404": [          {            "group": "Not Found 404",            "optional": false,            "field": "NotFound",            "description": "<p>UserNotification does not exist</p>"          }        ]      }    },    "filename": "src/api/routes/v1/user-notification.route.js",    "groupTitle": "UserNotification"  },  {    "type": "get",    "url": "v1/user-notification/:id",    "title": "Get UserNotification",    "description": "<p>Get user notification information</p>",    "version": "1.0.0",    "name": "GetUserNotification",    "group": "UserNotification",    "permission": [      {        "name": "admin, marketing, operacional"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Notification title</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "comments",            "description": "<p>Notification comments</p>"          },          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "read",            "description": "<p>Notification read</p>"          },          {            "group": "Success 200",            "type": "String[]",            "optional": false,            "field": "groupIds",            "description": "<p>Notification group ids</p>"          }        ]      }    },    "error": {      "fields": {        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users (with permissions) can access the data</p>"          }        ],        "Forbidden 403": [          {            "group": "Forbidden 403",            "optional": false,            "field": "Forbidden",            "description": "<p>Only user with same id can access the data</p>"          }        ],        "Not Found 404": [          {            "group": "Not Found 404",            "optional": false,            "field": "NotFound",            "description": "<p>UserNotification does not exist</p>"          }        ]      }    },    "filename": "src/api/routes/v1/user-notification.route.js",    "groupTitle": "UserNotification"  },  {    "type": "get",    "url": "v1/user-notification",    "title": "List all user notifications",    "description": "<p>List all user notification information</p>",    "version": "1.0.0",    "name": "ListUserNotification",    "group": "UserNotification",    "permission": [      {        "name": "user"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "size": "1-",            "optional": true,            "field": "page",            "defaultValue": "1",            "description": "<p>List page</p>"          },          {            "group": "Parameter",            "type": "Number",            "size": "1-100",            "optional": true,            "field": "limit",            "defaultValue": "10",            "description": "<p>Results per page</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "userNotifications",            "description": "<p>List of User Notification</p>"          }        ]      }    },    "error": {      "fields": {        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users (with permissions) can access the data</p>"          }        ],        "Not Found 404": [          {            "group": "Not Found 404",            "optional": false,            "field": "NotFound",            "description": "<p>UserNotification does not exist</p>"          }        ]      }    },    "filename": "src/api/routes/v1/user-notification.route.js",    "groupTitle": "UserNotification"  },  {    "type": "put",    "url": "v1/users/:id",    "title": "Replace User",    "description": "<p>Replace the whole user document with a new one</p>",    "version": "1.0.0",    "name": "ReplaceUser",    "group": "User",    "permission": [      {        "name": "user"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>User's email</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "6..128",            "optional": false,            "field": "password",            "description": "<p>User's password</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "..128",            "optional": true,            "field": "name",            "description": "<p>User's name</p>"          },          {            "group": "Parameter",            "type": "String",            "allowedValues": [              "user",              "admin"            ],            "optional": true,            "field": "role",            "description": "<p>User's role (You must be an admin to change the user's role)</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>User's id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>User's name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>User's email</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "role",            "description": "<p>User's role</p>"          },          {            "group": "Success 200",            "type": "Date",            "optional": false,            "field": "createdAt",            "description": "<p>Timestamp</p>"          }        ]      }    },    "error": {      "fields": {        "Bad Request 400": [          {            "group": "Bad Request 400",            "optional": false,            "field": "ValidationError",            "description": "<p>Some parameters may contain invalid values</p>"          }        ],        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users can modify the data</p>"          }        ],        "Forbidden 403": [          {            "group": "Forbidden 403",            "optional": false,            "field": "Forbidden",            "description": "<p>Only user with same id or admins can modify the data</p>"          }        ],        "Not Found 404": [          {            "group": "Not Found 404",            "optional": false,            "field": "NotFound",            "description": "<p>User does not exist</p>"          }        ]      }    },    "filename": "src/api/routes/v1/user.route.js",    "groupTitle": "User"  },  {    "type": "patch",    "url": "v1/users/:id",    "title": "Update User",    "description": "<p>Update some fields of a user document</p>",    "version": "1.0.0",    "name": "UpdateUser",    "group": "User",    "permission": [      {        "name": "user"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>User's email</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "6..128",            "optional": false,            "field": "password",            "description": "<p>User's password</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "..128",            "optional": true,            "field": "name",            "description": "<p>User's name</p>"          },          {            "group": "Parameter",            "type": "String",            "allowedValues": [              "user",              "admin"            ],            "optional": true,            "field": "role",            "description": "<p>User's role (You must be an admin to change the user's role)</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>User's id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>User's name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>User's email</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "role",            "description": "<p>User's role</p>"          },          {            "group": "Success 200",            "type": "Date",            "optional": false,            "field": "createdAt",            "description": "<p>Timestamp</p>"          }        ]      }    },    "error": {      "fields": {        "Bad Request 400": [          {            "group": "Bad Request 400",            "optional": false,            "field": "ValidationError",            "description": "<p>Some parameters may contain invalid values</p>"          }        ],        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users can modify the data</p>"          }        ],        "Forbidden 403": [          {            "group": "Forbidden 403",            "optional": false,            "field": "Forbidden",            "description": "<p>Only user with same id or admins can modify the data</p>"          }        ],        "Not Found 404": [          {            "group": "Not Found 404",            "optional": false,            "field": "NotFound",            "description": "<p>User does not exist</p>"          }        ]      }    },    "filename": "src/api/routes/v1/user.route.js",    "groupTitle": "User"  },  {    "type": "get",    "url": "v1/users/full-profile",    "title": "User Full Profile",    "description": "<p>Get logged in user full profile information</p>",    "version": "1.0.0",    "name": "UserFullProfile",    "group": "User",    "permission": [      {        "name": "user"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "{\n    \"_id\": \"5ba1b13fe34bccc956cb4096\",\n    \"createdAt\": \"2018-09-19T02:15:27.229Z\",\n    \"login\": \"andreadmin\",\n    \"email\": \"andre@andreadmin.com\",\n    \"name\": \"Andre Admin\",\n    \"pin\": \"123123\",\n    \"birthdate\": \"1985-11-05T00:00:00.000Z\",\n    \"cpfCnpj\": \"000.000.000-00\",\n    \"docId\": \"0000000000\",\n    \"phone\": \"41992558377\",\n    \"cellphone\": \"41992558377\",\n    \"motherName\": \"Maria\",\n    \"fatherName\": \"Marcio\",\n    \"maritalStatus\": \"casado\",\n    \"gender\": \"m\",\n    \"address\": \"Rua do Sol\",\n    \"addressNumber\": 100,\n    \"district\": \"Seminário\",\n    \"city\": \"Curitiba\",\n    \"state\": \"PR\",\n    \"zipCode\": \"80440000\",\n    \"bank\": \"CEF\",\n    \"agencyNumber\": 231232,\n    \"accountNumber\": 12313,\n    \"accountDigit\": 9,\n    \"role\": \"admin\",\n    \"accountType\": \"cc\",\n    \"personType\": \"fisica\",\n    \"sponsorId\": \"rafaelvilla\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated Users can access the data</p>"          }        ]      }    },    "filename": "src/api/routes/v1/user.route.js",    "groupTitle": "User"  },  {    "type": "get",    "url": "v1/users/profile",    "title": "User Profile",    "description": "<p>Get logged in user profile information</p>",    "version": "1.0.0",    "name": "UserProfile",    "group": "User",    "permission": [      {        "name": "user"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>User's id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>User's name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>User's email</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "role",            "description": "<p>User's role</p>"          },          {            "group": "Success 200",            "type": "Date",            "optional": false,            "field": "createdAt",            "description": "<p>Timestamp</p>"          }        ]      }    },    "error": {      "fields": {        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated Users can access the data</p>"          }        ]      }    },    "filename": "src/api/routes/v1/user.route.js",    "groupTitle": "User"  },  {    "type": "get",    "url": "v1/users/profile",    "title": "User Profile",    "description": "<p>Get logged in user profile information</p>",    "version": "1.0.0",    "name": "UserProfile",    "group": "User",    "permission": [      {        "name": "user"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>User's id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>User's name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>User's email</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "role",            "description": "<p>User's role</p>"          },          {            "group": "Success 200",            "type": "Date",            "optional": false,            "field": "createdAt",            "description": "<p>Timestamp</p>"          }        ]      }    },    "error": {      "fields": {        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated Users can access the data</p>"          }        ]      }    },    "filename": "src/api/routes/v1/user.route.js",    "groupTitle": "User"  },  {    "type": "post",    "url": "v1/workshop",    "title": "Create Workshop",    "description": "<p>Create a new workshop</p>",    "version": "1.0.0",    "name": "CreateWorkshop",    "group": "Workshop",    "permission": [      {        "name": "admin"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "size": "...50",            "optional": false,            "field": "title",            "description": "<p>Workshop title</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "...200",            "optional": false,            "field": "description",            "description": "<p>Workshop description</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": false,            "field": "active",            "description": "<p>Workshop active</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "...300",            "optional": false,            "field": "videoLink",            "description": "<p>Workshop videoLink</p>"          }        ]      }    },    "success": {      "fields": {        "Created 201": [          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p>Workshop id</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "title",            "description": "<p>Workshop title</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "description",            "description": "<p>Workshop description</p>"          },          {            "group": "Created 201",            "type": "Boolean",            "optional": false,            "field": "active",            "description": "<p>Workshop active</p>"          },          {            "group": "Created 201",            "type": "String",            "optional": false,            "field": "videoLink",            "description": "<p>Workshop videoLink</p>"          },          {            "group": "Created 201",            "type": "Date",            "optional": false,            "field": "createdAt",            "description": "<p>Timestamp</p>"          }        ]      }    },    "error": {      "fields": {        "Bad Request 400": [          {            "group": "Bad Request 400",            "optional": false,            "field": "ValidationError",            "description": "<p>Some parameters may contain invalid values</p>"          }        ],        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users (with permissions) can create the data</p>"          }        ]      }    },    "filename": "src/api/routes/v1/workshop.route.js",    "groupTitle": "Workshop"  },  {    "type": "get",    "url": "v1/workshop/:id",    "title": "Delete Workshop",    "description": "<p>Delete workshop information</p>",    "version": "1.0.0",    "name": "DeleteLWorkshop",    "group": "Workshop",    "permission": [      {        "name": "admin"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "success": {      "fields": {        "No Content 204": [          {            "group": "No Content 204",            "optional": false,            "field": "Successfully",            "description": "<p>deleted</p>"          }        ]      }    },    "error": {      "fields": {        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users (with permissions) can delete the data</p>"          }        ],        "Not Found 404": [          {            "group": "Not Found 404",            "optional": false,            "field": "NotFound",            "description": "<p>Workshop does not exist</p>"          }        ]      }    },    "filename": "src/api/routes/v1/workshop.route.js",    "groupTitle": "Workshop"  },  {    "type": "get",    "url": "v1/workshop/current/active",    "title": "Get Workshop active",    "description": "<p>Get workshop active information</p>",    "version": "1.0.0",    "name": "GetCurrentWorkshop",    "group": "Workshop",    "permission": [      {        "name": "user"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p>Workshop id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "title",            "description": "<p>Workshop title</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "description",            "description": "<p>Workshop description</p>"          },          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "active",            "description": "<p>Workshop active</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "videoLink",            "description": "<p>Workshop videoLink</p>"          },          {            "group": "Success 200",            "type": "Date",            "optional": false,            "field": "createdAt",            "description": "<p>Timestamp</p>"          }        ]      }    },    "error": {      "fields": {        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users (with permissions) can access the data</p>"          }        ],        "Not Found 404": [          {            "group": "Not Found 404",            "optional": false,            "field": "NotFound",            "description": "<p>Workshop does not exist</p>"          }        ]      }    },    "filename": "src/api/routes/v1/workshop.route.js",    "groupTitle": "Workshop"  },  {    "type": "get",    "url": "v1/workshop/:id",    "title": "Get Workshop",    "description": "<p>Get workshop information</p>",    "version": "1.0.0",    "name": "GetWorkshop",    "group": "Workshop",    "permission": [      {        "name": "admin"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p>Workshop id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "title",            "description": "<p>Workshop title</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "description",            "description": "<p>Workshop description</p>"          },          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "active",            "description": "<p>Workshop active</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "videoLink",            "description": "<p>Workshop videoLink</p>"          },          {            "group": "Success 200",            "type": "Date",            "optional": false,            "field": "createdAt",            "description": "<p>Timestamp</p>"          }        ]      }    },    "error": {      "fields": {        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users (with permissions) can access the data</p>"          }        ],        "Not Found 404": [          {            "group": "Not Found 404",            "optional": false,            "field": "NotFound",            "description": "<p>Workshop does not exist</p>"          }        ]      }    },    "filename": "src/api/routes/v1/workshop.route.js",    "groupTitle": "Workshop"  },  {    "type": "get",    "url": "v1/workshop",    "title": "List all Workshops",    "description": "<p>List all workshops  information</p>",    "version": "1.0.0",    "name": "ListWorkshop",    "group": "Workshop",    "permission": [      {        "name": "user"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p>Workshop id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "title",            "description": "<p>Workshop title</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "description",            "description": "<p>Workshop description</p>"          },          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "active",            "description": "<p>Workshop active</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "videoLink",            "description": "<p>Workshop videoLink</p>"          },          {            "group": "Success 200",            "type": "Date",            "optional": false,            "field": "createdAt",            "description": "<p>Timestamp</p>"          }        ]      }    },    "error": {      "fields": {        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users (with permissions) can access the data</p>"          }        ],        "Not Found 404": [          {            "group": "Not Found 404",            "optional": false,            "field": "NotFound",            "description": "<p>Workshop does not exist</p>"          }        ]      }    },    "filename": "src/api/routes/v1/workshop.route.js",    "groupTitle": "Workshop"  },  {    "type": "put",    "url": "v1/workshop",    "title": "Update Workshop",    "description": "<p>Update a workshop</p>",    "version": "1.0.0",    "name": "UpdateWorkshop",    "group": "Workshop",    "permission": [      {        "name": "User"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p>Workshop id</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "...50",            "optional": false,            "field": "title",            "description": "<p>Workshop title</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "...200",            "optional": false,            "field": "description",            "description": "<p>Workshop description</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": false,            "field": "active",            "description": "<p>Workshop active</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "...300",            "optional": false,            "field": "videoLink",            "description": "<p>Workshop videoLink</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p>Workshop id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "title",            "description": "<p>Workshop title</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "description",            "description": "<p>Workshop description</p>"          },          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "active",            "description": "<p>Workshop active</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "videoLink",            "description": "<p>Workshop videoLink</p>"          },          {            "group": "Success 200",            "type": "Date",            "optional": false,            "field": "createdAt",            "description": "<p>Timestamp</p>"          }        ]      }    },    "error": {      "fields": {        "Bad Request 400": [          {            "group": "Bad Request 400",            "optional": false,            "field": "ValidationError",            "description": "<p>Some parameters may contain invalid values</p>"          }        ],        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users (with permissions) can modify the data</p>"          }        ],        "Not Found 404": [          {            "group": "Not Found 404",            "optional": false,            "field": "NotFound",            "description": "<p>Workshop does not exist</p>"          }        ]      }    },    "filename": "src/api/routes/v1/workshop.route.js",    "groupTitle": "Workshop"  }] });
